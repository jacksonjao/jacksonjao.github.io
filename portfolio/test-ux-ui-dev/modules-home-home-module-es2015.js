(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["modules-home-home-module"],{

/***/ "./node_modules/@angular/common/fesm2015/http.js":
/*!*******************************************************!*\
  !*** ./node_modules/@angular/common/fesm2015/http.js ***!
  \*******************************************************/
/*! exports provided: ɵangular_packages_common_http_http_a, ɵangular_packages_common_http_http_b, ɵangular_packages_common_http_http_c, ɵangular_packages_common_http_http_d, ɵangular_packages_common_http_http_g, ɵangular_packages_common_http_http_h, ɵangular_packages_common_http_http_e, ɵangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, ɵHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_a", function() { return NoopInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_b", function() { return JsonpCallbackContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_c", function() { return jsonpCallbackContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_d", function() { return BrowserXhr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_g", function() { return HttpXsrfCookieExtractor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_h", function() { return HttpXsrfInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_e", function() { return XSRF_COOKIE_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_packages_common_http_http_f", function() { return XSRF_HEADER_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpBackend", function() { return HttpBackend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpHandler", function() { return HttpHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpClient", function() { return HttpClient; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpHeaders", function() { return HttpHeaders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HTTP_INTERCEPTORS", function() { return HTTP_INTERCEPTORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JsonpClientBackend", function() { return JsonpClientBackend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JsonpInterceptor", function() { return JsonpInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpClientJsonpModule", function() { return HttpClientJsonpModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpClientModule", function() { return HttpClientModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpClientXsrfModule", function() { return HttpClientXsrfModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵHttpInterceptingHandler", function() { return HttpInterceptingHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpParams", function() { return HttpParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpUrlEncodingCodec", function() { return HttpUrlEncodingCodec; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpRequest", function() { return HttpRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpErrorResponse", function() { return HttpErrorResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpEventType", function() { return HttpEventType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpHeaderResponse", function() { return HttpHeaderResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpResponse", function() { return HttpResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpResponseBase", function() { return HttpResponseBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpXhrBackend", function() { return HttpXhrBackend; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XhrFactory", function() { return XhrFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpXsrfTokenExtractor", function() { return HttpXsrfTokenExtractor; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/**
 * @license Angular v8.2.14
 * (c) 2010-2019 Google LLC. https://angular.io/
 * License: MIT
 */






/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a
 * `HttpResponse`.
 *
 * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the
 * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the
 * `HttpBackend`.
 *
 * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.
 *
 * \@publicApi
 * @abstract
 */
class HttpHandler {
}
if (false) {}
/**
 * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.
 *
 * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.
 *
 * When injected, `HttpBackend` dispatches requests directly to the backend, without going
 * through the interceptor chain.
 *
 * \@publicApi
 * @abstract
 */
class HttpBackend {
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @record
 */
function Update() { }
if (false) {}
/**
 * Represents the header configuration options for an HTTP request.
 * Instances are immutable. Modifying methods return a cloned
 * instance with the change. The original object is never changed.
 *
 * \@publicApi
 */
class HttpHeaders {
    /**
     * Constructs a new HTTP header object with the given values.
     * @param {?=} headers
     */
    constructor(headers) {
        /**
         * Internal map of lowercased header names to the normalized
         * form of the name (the form seen first).
         */
        this.normalizedNames = new Map();
        /**
         * Queued updates to be materialized the next initialization.
         */
        this.lazyUpdate = null;
        if (!headers) {
            this.headers = new Map();
        }
        else if (typeof headers === 'string') {
            this.lazyInit = (/**
             * @return {?}
             */
            () => {
                this.headers = new Map();
                headers.split('\n').forEach((/**
                 * @param {?} line
                 * @return {?}
                 */
                line => {
                    /** @type {?} */
                    const index = line.indexOf(':');
                    if (index > 0) {
                        /** @type {?} */
                        const name = line.slice(0, index);
                        /** @type {?} */
                        const key = name.toLowerCase();
                        /** @type {?} */
                        const value = line.slice(index + 1).trim();
                        this.maybeSetNormalizedName(name, key);
                        if (this.headers.has(key)) {
                            (/** @type {?} */ (this.headers.get(key))).push(value);
                        }
                        else {
                            this.headers.set(key, [value]);
                        }
                    }
                }));
            });
        }
        else {
            this.lazyInit = (/**
             * @return {?}
             */
            () => {
                this.headers = new Map();
                Object.keys(headers).forEach((/**
                 * @param {?} name
                 * @return {?}
                 */
                name => {
                    /** @type {?} */
                    let values = headers[name];
                    /** @type {?} */
                    const key = name.toLowerCase();
                    if (typeof values === 'string') {
                        values = [values];
                    }
                    if (values.length > 0) {
                        this.headers.set(key, values);
                        this.maybeSetNormalizedName(name, key);
                    }
                }));
            });
        }
    }
    /**
     * Checks for existence of a given header.
     *
     * @param {?} name The header name to check for existence.
     *
     * @return {?} True if the header exists, false otherwise.
     */
    has(name) {
        this.init();
        return this.headers.has(name.toLowerCase());
    }
    /**
     * Retrieves the first value of a given header.
     *
     * @param {?} name The header name.
     *
     * @return {?} The value string if the header exists, null otherwise
     */
    get(name) {
        this.init();
        /** @type {?} */
        const values = this.headers.get(name.toLowerCase());
        return values && values.length > 0 ? values[0] : null;
    }
    /**
     * Retrieves the names of the headers.
     *
     * @return {?} A list of header names.
     */
    keys() {
        this.init();
        return Array.from(this.normalizedNames.values());
    }
    /**
     * Retrieves a list of values for a given header.
     *
     * @param {?} name The header name from which to retrieve values.
     *
     * @return {?} A string of values if the header exists, null otherwise.
     */
    getAll(name) {
        this.init();
        return this.headers.get(name.toLowerCase()) || null;
    }
    /**
     * Appends a new value to the existing set of values for a header
     * and returns them in a clone of the original instance.
     *
     * @param {?} name The header name for which to append the value or values.
     * @param {?} value The new value or array of values.
     *
     * @return {?} A clone of the HTTP headers object with the value appended to the given header.
     */
    append(name, value) {
        return this.clone({ name, value, op: 'a' });
    }
    /**
     * Sets or modifies a value for a given header in a clone of the original instance.
     * If the header already exists, its value is replaced with the given value
     * in the returned object.
     *
     * @param {?} name The header name.
     * @param {?} value The value or values to set or overide for the given header.
     *
     * @return {?} A clone of the HTTP headers object with the newly set header value.
     */
    set(name, value) {
        return this.clone({ name, value, op: 's' });
    }
    /**
     * Deletes values for a given header in a clone of the original instance.
     *
     * @param {?} name The header name.
     * @param {?=} value The value or values to delete for the given header.
     *
     * @return {?} A clone of the HTTP headers object with the given value deleted.
     */
    delete(name, value) {
        return this.clone({ name, value, op: 'd' });
    }
    /**
     * @private
     * @param {?} name
     * @param {?} lcName
     * @return {?}
     */
    maybeSetNormalizedName(name, lcName) {
        if (!this.normalizedNames.has(lcName)) {
            this.normalizedNames.set(lcName, name);
        }
    }
    /**
     * @private
     * @return {?}
     */
    init() {
        if (!!this.lazyInit) {
            if (this.lazyInit instanceof HttpHeaders) {
                this.copyFrom(this.lazyInit);
            }
            else {
                this.lazyInit();
            }
            this.lazyInit = null;
            if (!!this.lazyUpdate) {
                this.lazyUpdate.forEach((/**
                 * @param {?} update
                 * @return {?}
                 */
                update => this.applyUpdate(update)));
                this.lazyUpdate = null;
            }
        }
    }
    /**
     * @private
     * @param {?} other
     * @return {?}
     */
    copyFrom(other) {
        other.init();
        Array.from(other.headers.keys()).forEach((/**
         * @param {?} key
         * @return {?}
         */
        key => {
            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));
            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));
        }));
    }
    /**
     * @private
     * @param {?} update
     * @return {?}
     */
    clone(update) {
        /** @type {?} */
        const clone = new HttpHeaders();
        clone.lazyInit =
            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;
        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);
        return clone;
    }
    /**
     * @private
     * @param {?} update
     * @return {?}
     */
    applyUpdate(update) {
        /** @type {?} */
        const key = update.name.toLowerCase();
        switch (update.op) {
            case 'a':
            case 's':
                /** @type {?} */
                let value = (/** @type {?} */ (update.value));
                if (typeof value === 'string') {
                    value = [value];
                }
                if (value.length === 0) {
                    return;
                }
                this.maybeSetNormalizedName(update.name, key);
                /** @type {?} */
                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];
                base.push(...value);
                this.headers.set(key, base);
                break;
            case 'd':
                /** @type {?} */
                const toDelete = (/** @type {?} */ (update.value));
                if (!toDelete) {
                    this.headers.delete(key);
                    this.normalizedNames.delete(key);
                }
                else {
                    /** @type {?} */
                    let existing = this.headers.get(key);
                    if (!existing) {
                        return;
                    }
                    existing = existing.filter((/**
                     * @param {?} value
                     * @return {?}
                     */
                    value => toDelete.indexOf(value) === -1));
                    if (existing.length === 0) {
                        this.headers.delete(key);
                        this.normalizedNames.delete(key);
                    }
                    else {
                        this.headers.set(key, existing);
                    }
                }
                break;
        }
    }
    /**
     * \@internal
     * @param {?} fn
     * @return {?}
     */
    forEach(fn) {
        this.init();
        Array.from(this.normalizedNames.keys())
            .forEach((/**
         * @param {?} key
         * @return {?}
         */
        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * A codec for encoding and decoding parameters in URLs.
 *
 * Used by `HttpParams`.
 *
 * \@publicApi
 *
 * @record
 */
function HttpParameterCodec() { }
if (false) {}
/**
 * Provides encoding and decoding of URL parameter and query-string values.
 *
 * Serializes and parses URL parameter keys and values to encode and decode them.
 * If you pass URL query parameters without encoding,
 * the query parameters can be misinterpreted at the receiving end.
 *
 *
 * \@publicApi
 */
class HttpUrlEncodingCodec {
    /**
     * Encodes a key name for a URL parameter or query-string.
     * @param {?} key The key name.
     * @return {?} The encoded key name.
     */
    encodeKey(key) { return standardEncoding(key); }
    /**
     * Encodes the value of a URL parameter or query-string.
     * @param {?} value The value.
     * @return {?} The encoded value.
     */
    encodeValue(value) { return standardEncoding(value); }
    /**
     * Decodes an encoded URL parameter or query-string key.
     * @param {?} key The encoded key name.
     * @return {?} The decoded key name.
     */
    decodeKey(key) { return decodeURIComponent(key); }
    /**
     * Decodes an encoded URL parameter or query-string value.
     * @param {?} value The encoded value.
     * @return {?} The decoded value.
     */
    decodeValue(value) { return decodeURIComponent(value); }
}
/**
 * @param {?} rawParams
 * @param {?} codec
 * @return {?}
 */
function paramParser(rawParams, codec) {
    /** @type {?} */
    const map = new Map();
    if (rawParams.length > 0) {
        /** @type {?} */
        const params = rawParams.split('&');
        params.forEach((/**
         * @param {?} param
         * @return {?}
         */
        (param) => {
            /** @type {?} */
            const eqIdx = param.indexOf('=');
            const [key, val] = eqIdx == -1 ?
                [codec.decodeKey(param), ''] :
                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];
            /** @type {?} */
            const list = map.get(key) || [];
            list.push(val);
            map.set(key, list);
        }));
    }
    return map;
}
/**
 * @param {?} v
 * @return {?}
 */
function standardEncoding(v) {
    return encodeURIComponent(v)
        .replace(/%40/gi, '@')
        .replace(/%3A/gi, ':')
        .replace(/%24/gi, '$')
        .replace(/%2C/gi, ',')
        .replace(/%3B/gi, ';')
        .replace(/%2B/gi, '+')
        .replace(/%3D/gi, '=')
        .replace(/%3F/gi, '?')
        .replace(/%2F/gi, '/');
}
/**
 * @record
 */
function Update$1() { }
if (false) {}
/**
 * Options used to construct an `HttpParams` instance.
 *
 * \@publicApi
 * @record
 */
function HttpParamsOptions() { }
if (false) {}
/**
 * An HTTP request/response body that represents serialized parameters,
 * per the MIME type `application/x-www-form-urlencoded`.
 *
 * This class is immutable; all mutation operations return a new instance.
 *
 * \@publicApi
 */
class HttpParams {
    /**
     * @param {?=} options
     */
    constructor(options = (/** @type {?} */ ({}))) {
        this.updates = null;
        this.cloneFrom = null;
        this.encoder = options.encoder || new HttpUrlEncodingCodec();
        if (!!options.fromString) {
            if (!!options.fromObject) {
                throw new Error(`Cannot specify both fromString and fromObject.`);
            }
            this.map = paramParser(options.fromString, this.encoder);
        }
        else if (!!options.fromObject) {
            this.map = new Map();
            Object.keys(options.fromObject).forEach((/**
             * @param {?} key
             * @return {?}
             */
            key => {
                /** @type {?} */
                const value = ((/** @type {?} */ (options.fromObject)))[key];
                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);
            }));
        }
        else {
            this.map = null;
        }
    }
    /**
     * Reports whether the body includes one or more values for a given parameter.
     * @param {?} param The parameter name.
     * @return {?} True if the parameter has one or more values,
     * false if it has no value or is not present.
     */
    has(param) {
        this.init();
        return (/** @type {?} */ (this.map)).has(param);
    }
    /**
     * Retrieves the first value for a parameter.
     * @param {?} param The parameter name.
     * @return {?} The first value of the given parameter,
     * or `null` if the parameter is not present.
     */
    get(param) {
        this.init();
        /** @type {?} */
        const res = (/** @type {?} */ (this.map)).get(param);
        return !!res ? res[0] : null;
    }
    /**
     * Retrieves all values for a  parameter.
     * @param {?} param The parameter name.
     * @return {?} All values in a string array,
     * or `null` if the parameter not present.
     */
    getAll(param) {
        this.init();
        return (/** @type {?} */ (this.map)).get(param) || null;
    }
    /**
     * Retrieves all the parameters for this body.
     * @return {?} The parameter names in a string array.
     */
    keys() {
        this.init();
        return Array.from((/** @type {?} */ (this.map)).keys());
    }
    /**
     * Appends a new value to existing values for a parameter.
     * @param {?} param The parameter name.
     * @param {?} value The new value to add.
     * @return {?} A new body with the appended value.
     */
    append(param, value) { return this.clone({ param, value, op: 'a' }); }
    /**
     * Replaces the value for a parameter.
     * @param {?} param The parameter name.
     * @param {?} value The new value.
     * @return {?} A new body with the new value.
     */
    set(param, value) { return this.clone({ param, value, op: 's' }); }
    /**
     * Removes a given value or all values from a parameter.
     * @param {?} param The parameter name.
     * @param {?=} value The value to remove, if provided.
     * @return {?} A new body with the given value removed, or with all values
     * removed if no value is specified.
     */
    delete(param, value) { return this.clone({ param, value, op: 'd' }); }
    /**
     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are
     * separated by `&`s.
     * @return {?}
     */
    toString() {
        this.init();
        return this.keys()
            .map((/**
         * @param {?} key
         * @return {?}
         */
        key => {
            /** @type {?} */
            const eKey = this.encoder.encodeKey(key);
            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**
             * @param {?} value
             * @return {?}
             */
            value => eKey + '=' + this.encoder.encodeValue(value)))
                .join('&');
        }))
            .join('&');
    }
    /**
     * @private
     * @param {?} update
     * @return {?}
     */
    clone(update) {
        /** @type {?} */
        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));
        clone.cloneFrom = this.cloneFrom || this;
        clone.updates = (this.updates || []).concat([update]);
        return clone;
    }
    /**
     * @private
     * @return {?}
     */
    init() {
        if (this.map === null) {
            this.map = new Map();
        }
        if (this.cloneFrom !== null) {
            this.cloneFrom.init();
            this.cloneFrom.keys().forEach((/**
             * @param {?} key
             * @return {?}
             */
            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));
            (/** @type {?} */ (this.updates)).forEach((/**
             * @param {?} update
             * @return {?}
             */
            update => {
                switch (update.op) {
                    case 'a':
                    case 's':
                        /** @type {?} */
                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];
                        base.push((/** @type {?} */ (update.value)));
                        (/** @type {?} */ (this.map)).set(update.param, base);
                        break;
                    case 'd':
                        if (update.value !== undefined) {
                            /** @type {?} */
                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];
                            /** @type {?} */
                            const idx = base.indexOf(update.value);
                            if (idx !== -1) {
                                base.splice(idx, 1);
                            }
                            if (base.length > 0) {
                                (/** @type {?} */ (this.map)).set(update.param, base);
                            }
                            else {
                                (/** @type {?} */ (this.map)).delete(update.param);
                            }
                        }
                        else {
                            (/** @type {?} */ (this.map)).delete(update.param);
                            break;
                        }
                }
            }));
            this.cloneFrom = this.updates = null;
        }
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Construction interface for `HttpRequest`s.
 *
 * All values are optional and will override default values if provided.
 * @record
 */
function HttpRequestInit() { }
if (false) {}
/**
 * Determine whether the given HTTP method may include a body.
 * @param {?} method
 * @return {?}
 */
function mightHaveBody(method) {
    switch (method) {
        case 'DELETE':
        case 'GET':
        case 'HEAD':
        case 'OPTIONS':
        case 'JSONP':
            return false;
        default:
            return true;
    }
}
/**
 * Safely assert whether the given value is an ArrayBuffer.
 *
 * In some execution environments ArrayBuffer is not defined.
 * @param {?} value
 * @return {?}
 */
function isArrayBuffer(value) {
    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;
}
/**
 * Safely assert whether the given value is a Blob.
 *
 * In some execution environments Blob is not defined.
 * @param {?} value
 * @return {?}
 */
function isBlob(value) {
    return typeof Blob !== 'undefined' && value instanceof Blob;
}
/**
 * Safely assert whether the given value is a FormData instance.
 *
 * In some execution environments FormData is not defined.
 * @param {?} value
 * @return {?}
 */
function isFormData(value) {
    return typeof FormData !== 'undefined' && value instanceof FormData;
}
/**
 * An outgoing HTTP request with an optional typed body.
 *
 * `HttpRequest` represents an outgoing request, including URL, method,
 * headers, body, and other request configuration options. Instances should be
 * assumed to be immutable. To modify a `HttpRequest`, the `clone`
 * method should be used.
 *
 * \@publicApi
 * @template T
 */
class HttpRequest {
    /**
     * @param {?} method
     * @param {?} url
     * @param {?=} third
     * @param {?=} fourth
     */
    constructor(method, url, third, fourth) {
        this.url = url;
        /**
         * The request body, or `null` if one isn't set.
         *
         * Bodies are not enforced to be immutable, as they can include a reference to any
         * user-defined data type. However, interceptors should take care to preserve
         * idempotence by treating them as such.
         */
        this.body = null;
        /**
         * Whether this request should be made in a way that exposes progress events.
         *
         * Progress events are expensive (change detection runs on each event) and so
         * they should only be requested if the consumer intends to monitor them.
         */
        this.reportProgress = false;
        /**
         * Whether this request should be sent with outgoing credentials (cookies).
         */
        this.withCredentials = false;
        /**
         * The expected response type of the server.
         *
         * This is used to parse the response appropriately before returning it to
         * the requestee.
         */
        this.responseType = 'json';
        this.method = method.toUpperCase();
        // Next, need to figure out which argument holds the HttpRequestInit
        // options, if any.
        /** @type {?} */
        let options;
        // Check whether a body argument is expected. The only valid way to omit
        // the body argument is to use a known no-body method like GET.
        if (mightHaveBody(this.method) || !!fourth) {
            // Body is the third argument, options are the fourth.
            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;
            options = fourth;
        }
        else {
            // No body required, options are the third argument. The body stays null.
            options = (/** @type {?} */ (third));
        }
        // If options have been passed, interpret them.
        if (options) {
            // Normalize reportProgress and withCredentials.
            this.reportProgress = !!options.reportProgress;
            this.withCredentials = !!options.withCredentials;
            // Override default response type of 'json' if one is provided.
            if (!!options.responseType) {
                this.responseType = options.responseType;
            }
            // Override headers if they're provided.
            if (!!options.headers) {
                this.headers = options.headers;
            }
            if (!!options.params) {
                this.params = options.params;
            }
        }
        // If no headers have been passed in, construct a new HttpHeaders instance.
        if (!this.headers) {
            this.headers = new HttpHeaders();
        }
        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.
        if (!this.params) {
            this.params = new HttpParams();
            this.urlWithParams = url;
        }
        else {
            // Encode the parameters to a string in preparation for inclusion in the URL.
            /** @type {?} */
            const params = this.params.toString();
            if (params.length === 0) {
                // No parameters, the visible URL is just the URL given at creation time.
                this.urlWithParams = url;
            }
            else {
                // Does the URL already have query parameters? Look for '?'.
                /** @type {?} */
                const qIdx = url.indexOf('?');
                // There are 3 cases to handle:
                // 1) No existing parameters -> append '?' followed by params.
                // 2) '?' exists and is followed by existing query string ->
                //    append '&' followed by params.
                // 3) '?' exists at the end of the url -> append params directly.
                // This basically amounts to determining the character, if any, with
                // which to join the URL and parameters.
                /** @type {?} */
                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');
                this.urlWithParams = url + sep + params;
            }
        }
    }
    /**
     * Transform the free-form body into a serialized format suitable for
     * transmission to the server.
     * @return {?}
     */
    serializeBody() {
        // If no body is present, no need to serialize it.
        if (this.body === null) {
            return null;
        }
        // Check whether the body is already in a serialized form. If so,
        // it can just be returned directly.
        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||
            typeof this.body === 'string') {
            return this.body;
        }
        // Check whether the body is an instance of HttpUrlEncodedParams.
        if (this.body instanceof HttpParams) {
            return this.body.toString();
        }
        // Check whether the body is an object or array, and serialize with JSON if so.
        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||
            Array.isArray(this.body)) {
            return JSON.stringify(this.body);
        }
        // Fall back on toString() for everything else.
        return ((/** @type {?} */ (this.body))).toString();
    }
    /**
     * Examine the body and attempt to infer an appropriate MIME type
     * for it.
     *
     * If no such type can be inferred, this method will return `null`.
     * @return {?}
     */
    detectContentTypeHeader() {
        // An empty body has no content type.
        if (this.body === null) {
            return null;
        }
        // FormData bodies rely on the browser's content type assignment.
        if (isFormData(this.body)) {
            return null;
        }
        // Blobs usually have their own content type. If it doesn't, then
        // no type can be inferred.
        if (isBlob(this.body)) {
            return this.body.type || null;
        }
        // Array buffers have unknown contents and thus no type can be inferred.
        if (isArrayBuffer(this.body)) {
            return null;
        }
        // Technically, strings could be a form of JSON data, but it's safe enough
        // to assume they're plain strings.
        if (typeof this.body === 'string') {
            return 'text/plain';
        }
        // `HttpUrlEncodedParams` has its own content-type.
        if (this.body instanceof HttpParams) {
            return 'application/x-www-form-urlencoded;charset=UTF-8';
        }
        // Arrays, objects, and numbers will be encoded as JSON.
        if (typeof this.body === 'object' || typeof this.body === 'number' ||
            Array.isArray(this.body)) {
            return 'application/json';
        }
        // No type could be inferred.
        return null;
    }
    /**
     * @param {?=} update
     * @return {?}
     */
    clone(update = {}) {
        // For method, url, and responseType, take the current value unless
        // it is overridden in the update hash.
        /** @type {?} */
        const method = update.method || this.method;
        /** @type {?} */
        const url = update.url || this.url;
        /** @type {?} */
        const responseType = update.responseType || this.responseType;
        // The body is somewhat special - a `null` value in update.body means
        // whatever current body is present is being overridden with an empty
        // body, whereas an `undefined` value in update.body implies no
        // override.
        /** @type {?} */
        const body = (update.body !== undefined) ? update.body : this.body;
        // Carefully handle the boolean options to differentiate between
        // `false` and `undefined` in the update args.
        /** @type {?} */
        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;
        /** @type {?} */
        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;
        // Headers and params may be appended to if `setHeaders` or
        // `setParams` are used.
        /** @type {?} */
        let headers = update.headers || this.headers;
        /** @type {?} */
        let params = update.params || this.params;
        // Check whether the caller has asked to add headers.
        if (update.setHeaders !== undefined) {
            // Set every requested header.
            headers =
                Object.keys(update.setHeaders)
                    .reduce((/**
                 * @param {?} headers
                 * @param {?} name
                 * @return {?}
                 */
                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);
        }
        // Check whether the caller has asked to set params.
        if (update.setParams) {
            // Set every requested param.
            params = Object.keys(update.setParams)
                .reduce((/**
             * @param {?} params
             * @param {?} param
             * @return {?}
             */
            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);
        }
        // Finally, construct the new HttpRequest using the pieces from above.
        return new HttpRequest(method, url, body, {
            params, headers, reportProgress, responseType, withCredentials,
        });
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
const HttpEventType = {
    /**
     * The request was sent out over the wire.
     */
    Sent: 0,
    /**
     * An upload progress event was received.
     */
    UploadProgress: 1,
    /**
     * The response status code and headers were received.
     */
    ResponseHeader: 2,
    /**
     * A download progress event was received.
     */
    DownloadProgress: 3,
    /**
     * The full response including the body was received.
     */
    Response: 4,
    /**
     * A custom event from an interceptor or a backend.
     */
    User: 5,
};
HttpEventType[HttpEventType.Sent] = 'Sent';
HttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';
HttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';
HttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';
HttpEventType[HttpEventType.Response] = 'Response';
HttpEventType[HttpEventType.User] = 'User';
/**
 * Base interface for progress events.
 *
 * \@publicApi
 * @record
 */
function HttpProgressEvent() { }
if (false) {}
/**
 * A download progress event.
 *
 * \@publicApi
 * @record
 */
function HttpDownloadProgressEvent() { }
if (false) {}
/**
 * An upload progress event.
 *
 * \@publicApi
 * @record
 */
function HttpUploadProgressEvent() { }
if (false) {}
/**
 * An event indicating that the request was sent to the server. Useful
 * when a request may be retried multiple times, to distinguish between
 * retries on the final event stream.
 *
 * \@publicApi
 * @record
 */
function HttpSentEvent() { }
if (false) {}
/**
 * A user-defined event.
 *
 * Grouping all custom events under this type ensures they will be handled
 * and forwarded by all implementations of interceptors.
 *
 * \@publicApi
 * @record
 * @template T
 */
function HttpUserEvent() { }
if (false) {}
/**
 * An error that represents a failed attempt to JSON.parse text coming back
 * from the server.
 *
 * It bundles the Error object with the actual response body that failed to parse.
 *
 *
 * @record
 */
function HttpJsonParseError() { }
if (false) {}
/**
 * Base class for both `HttpResponse` and `HttpHeaderResponse`.
 *
 * \@publicApi
 * @abstract
 */
class HttpResponseBase {
    /**
     * Super-constructor for all responses.
     *
     * The single parameter accepted is an initialization hash. Any properties
     * of the response passed there will override the default values.
     * @param {?} init
     * @param {?=} defaultStatus
     * @param {?=} defaultStatusText
     */
    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {
        // If the hash has values passed, use them to initialize the response.
        // Otherwise use the default values.
        this.headers = init.headers || new HttpHeaders();
        this.status = init.status !== undefined ? init.status : defaultStatus;
        this.statusText = init.statusText || defaultStatusText;
        this.url = init.url || null;
        // Cache the ok value to avoid defining a getter.
        this.ok = this.status >= 200 && this.status < 300;
    }
}
if (false) {}
/**
 * A partial HTTP response which only includes the status and header data,
 * but no response body.
 *
 * `HttpHeaderResponse` is a `HttpEvent` available on the response
 * event stream, only when progress events are requested.
 *
 * \@publicApi
 */
class HttpHeaderResponse extends HttpResponseBase {
    /**
     * Create a new `HttpHeaderResponse` with the given parameters.
     * @param {?=} init
     */
    constructor(init = {}) {
        super(init);
        this.type = HttpEventType.ResponseHeader;
    }
    /**
     * Copy this `HttpHeaderResponse`, overriding its contents with the
     * given parameter hash.
     * @param {?=} update
     * @return {?}
     */
    clone(update = {}) {
        // Perform a straightforward initialization of the new HttpHeaderResponse,
        // overriding the current parameters with new ones if given.
        return new HttpHeaderResponse({
            headers: update.headers || this.headers,
            status: update.status !== undefined ? update.status : this.status,
            statusText: update.statusText || this.statusText,
            url: update.url || this.url || undefined,
        });
    }
}
if (false) {}
/**
 * A full HTTP response, including a typed response body (which may be `null`
 * if one was not returned).
 *
 * `HttpResponse` is a `HttpEvent` available on the response event
 * stream.
 *
 * \@publicApi
 * @template T
 */
class HttpResponse extends HttpResponseBase {
    /**
     * Construct a new `HttpResponse`.
     * @param {?=} init
     */
    constructor(init = {}) {
        super(init);
        this.type = HttpEventType.Response;
        this.body = init.body !== undefined ? init.body : null;
    }
    /**
     * @param {?=} update
     * @return {?}
     */
    clone(update = {}) {
        return new HttpResponse({
            body: (update.body !== undefined) ? update.body : this.body,
            headers: update.headers || this.headers,
            status: (update.status !== undefined) ? update.status : this.status,
            statusText: update.statusText || this.statusText,
            url: update.url || this.url || undefined,
        });
    }
}
if (false) {}
/**
 * A response that represents an error or failure, either from a
 * non-successful HTTP status, an error while executing the request,
 * or some other failure which occurred during the parsing of the response.
 *
 * Any error returned on the `Observable` response stream will be
 * wrapped in an `HttpErrorResponse` to provide additional context about
 * the state of the HTTP layer when the error occurred. The error property
 * will contain either a wrapped Error object or the error response returned
 * from the server.
 *
 * \@publicApi
 */
class HttpErrorResponse extends HttpResponseBase {
    /**
     * @param {?} init
     */
    constructor(init) {
        // Initialize with a default status of 0 / Unknown Error.
        super(init, 0, 'Unknown Error');
        this.name = 'HttpErrorResponse';
        /**
         * Errors are never okay, even when the status code is in the 2xx success range.
         */
        this.ok = false;
        // If the response was successful, then this was a parse error. Otherwise, it was
        // a protocol-level failure of some sort. Either the request failed in transit
        // or the server returned an unsuccessful status code.
        if (this.status >= 200 && this.status < 300) {
            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;
        }
        else {
            this.message =
                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;
        }
        this.error = init.error || null;
    }
}
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and
 * the given `body`. This function clones the object and adds the body.
 *
 * Note that the `responseType` *options* value is a String that identifies the
 * single data type of the response.
 * A single overload version of the method handles each response type.
 * The value of `responseType` cannot be a union, as the combined signature could imply.
 *
 * @template T
 * @param {?} options
 * @param {?} body
 * @return {?}
 */
function addBody(options, body) {
    return {
        body,
        headers: options.headers,
        observe: options.observe,
        params: options.params,
        reportProgress: options.reportProgress,
        responseType: options.responseType,
        withCredentials: options.withCredentials,
    };
}
/**
 * Performs HTTP requests.
 * This service is available as an injectable class, with methods to perform HTTP requests.
 * Each request method has multiple signatures, and the return type varies based on
 * the signature that is called (mainly the values of `observe` and `responseType`).
 *
 * Note that the `responseType` *options* value is a String that identifies the
 * single data type of the response.
 * A single overload version of the method handles each response type.
 * The value of `responseType` cannot be a union, as the combined signature could imply.
 *
 * \@usageNotes
 * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.
 *
 * ### HTTP Request Example
 *
 * ```
 *  // GET heroes whose name contains search term
 * searchHeroes(term: string): observable<Hero[]>{
 *
 *  const params = new HttpParams({fromString: 'name=term'});
 *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});
 * }
 * ```
 * ### JSONP Example
 * ```
 * requestJsonp(url, callback = 'callback') {
 *  return this.httpClient.jsonp(this.heroesURL, callback);
 * }
 * ```
 *
 * ### PATCH Example
 * ```
 * // PATCH one of the heroes' name
 * patchHero (id: number, heroName: string): Observable<{}> {
 * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42
 *  return this.httpClient.patch(url, {name: heroName}, httpOptions)
 *    .pipe(catchError(this.handleError('patchHero')));
 * }
 * ```
 *
 * @see [HTTP Guide](guide/http)
 *
 * \@publicApi
 */
class HttpClient {
    /**
     * @param {?} handler
     */
    constructor(handler) {
        this.handler = handler;
    }
    /**
     * Constructs an observable for a generic HTTP request that, when subscribed,
     * fires the request through the chain of registered interceptors and on to the
     * server.
     *
     * You can pass an `HttpRequest` directly as the only parameter. In this case,
     * the call returns an observable of the raw `HttpEvent` stream.
     *
     * Alternatively you can pass an HTTP method as the first parameter,
     * a URL string as the second, and an options hash containing the request body as the third.
     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the
     * type of returned observable.
     *   * The `responseType` value determines how a successful response body is parsed.
     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting
     * object as a type parameter to the call.
     *
     * The `observe` value determines the return type, according to what you are interested in
     * observing.
     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including
     * progress events by default.
     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,
     * where the `T` parameter depends on the `responseType` and any optionally provided type
     * parameter.
     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.
     *
     * @param {?} first
     * @param {?=} url
     * @param {?=} options
     * @return {?}
     */
    request(first, url, options = {}) {
        /** @type {?} */
        let req;
        // First, check whether the primary argument is an instance of `HttpRequest`.
        if (first instanceof HttpRequest) {
            // It is. The other arguments must be undefined (per the signatures) and can be
            // ignored.
            req = (/** @type {?} */ (first));
        }
        else {
            // It's a string, so it represents a URL. Construct a request based on it,
            // and incorporate the remaining arguments (assuming `GET` unless a method is
            // provided.
            // Figure out the headers.
            /** @type {?} */
            let headers = undefined;
            if (options.headers instanceof HttpHeaders) {
                headers = options.headers;
            }
            else {
                headers = new HttpHeaders(options.headers);
            }
            // Sort out parameters.
            /** @type {?} */
            let params = undefined;
            if (!!options.params) {
                if (options.params instanceof HttpParams) {
                    params = options.params;
                }
                else {
                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));
                }
            }
            // Construct the request.
            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {
                headers,
                params,
                reportProgress: options.reportProgress,
                // By default, JSON is assumed to be returned for all calls.
                responseType: options.responseType || 'json',
                withCredentials: options.withCredentials,
            });
        }
        // Start with an Observable.of() the initial request, and run the handler (which
        // includes all interceptors) inside a concatMap(). This way, the handler runs
        // inside an Observable chain, which causes interceptors to be re-run on every
        // subscription (this also makes retries re-run the handler, including interceptors).
        /** @type {?} */
        const events$ = Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["of"])(req).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["concatMap"])((/**
         * @param {?} req
         * @return {?}
         */
        (req) => this.handler.handle(req))));
        // If coming via the API signature which accepts a previously constructed HttpRequest,
        // the only option is to get the event stream. Otherwise, return the event stream if
        // that is what was requested.
        if (first instanceof HttpRequest || options.observe === 'events') {
            return events$;
        }
        // The requested stream contains either the full response or the body. In either
        // case, the first step is to filter the event stream to extract a stream of
        // responses(s).
        /** @type {?} */
        const res$ = (/** @type {?} */ (events$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])((/**
         * @param {?} event
         * @return {?}
         */
        (event) => event instanceof HttpResponse)))));
        // Decide which stream to return.
        switch (options.observe || 'body') {
            case 'body':
                // The requested stream is the body. Map the response stream to the response
                // body. This could be done more simply, but a misbehaving interceptor might
                // transform the response body into a different format and ignore the requested
                // responseType. Guard against this by validating that the response is of the
                // requested type.
                switch (req.responseType) {
                    case 'arraybuffer':
                        return res$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((/**
                         * @param {?} res
                         * @return {?}
                         */
                        (res) => {
                            // Validate that the body is an ArrayBuffer.
                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {
                                throw new Error('Response is not an ArrayBuffer.');
                            }
                            return res.body;
                        })));
                    case 'blob':
                        return res$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((/**
                         * @param {?} res
                         * @return {?}
                         */
                        (res) => {
                            // Validate that the body is a Blob.
                            if (res.body !== null && !(res.body instanceof Blob)) {
                                throw new Error('Response is not a Blob.');
                            }
                            return res.body;
                        })));
                    case 'text':
                        return res$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((/**
                         * @param {?} res
                         * @return {?}
                         */
                        (res) => {
                            // Validate that the body is a string.
                            if (res.body !== null && typeof res.body !== 'string') {
                                throw new Error('Response is not a string.');
                            }
                            return res.body;
                        })));
                    case 'json':
                    default:
                        // No validation needed for JSON responses, as they can be of any type.
                        return res$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])((/**
                         * @param {?} res
                         * @return {?}
                         */
                        (res) => res.body)));
                }
            case 'response':
                // The response stream was requested directly, so return it.
                return res$;
            default:
                // Guard against new future observe types being added.
                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);
        }
    }
    /**
     * Constructs an observable that, when subscribed, causes the configured
     * `DELETE` request to execute on the server. See the individual overloads for
     * details on the return type.
     *
     * @param {?} url     The endpoint URL.
     * @param {?=} options The HTTP options to send with the request.
     *
     * @return {?}
     */
    delete(url, options = {}) {
        return this.request('DELETE', url, (/** @type {?} */ (options)));
    }
    /**
     * Constructs an observable that, when subscribed, causes the configured
     * `GET` request to execute on the server. See the individual overloads for
     * details on the return type.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */
    get(url, options = {}) {
        return this.request('GET', url, (/** @type {?} */ (options)));
    }
    /**
     * Constructs an observable that, when subscribed, causes the configured
     * `HEAD` request to execute on the server. The `HEAD` method returns
     * meta information about the resource without transferring the
     * resource itself. See the individual overloads for
     * details on the return type.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */
    head(url, options = {}) {
        return this.request('HEAD', url, (/** @type {?} */ (options)));
    }
    /**
     * Constructs an `Observable` that, when subscribed, causes a request with the special method
     * `JSONP` to be dispatched via the interceptor pipeline.
     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain
     * API endpoints that don't support newer,
     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.
     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the
     * requests even if the API endpoint is not located on the same domain (origin) as the client-side
     * application making the request.
     * The endpoint API must support JSONP callback for JSONP requests to work.
     * The resource API returns the JSON response wrapped in a callback function.
     * You can pass the callback function name as one of the query parameters.
     * Note that JSONP requests can only be used with `GET` requests.
     *
     * @template T
     * @param {?} url The resource URL.
     * @param {?} callbackParam The callback function name.
     *
     * @return {?}
     */
    jsonp(url, callbackParam) {
        return this.request('JSONP', url, {
            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),
            observe: 'body',
            responseType: 'json',
        });
    }
    /**
     * Constructs an `Observable` that, when subscribed, causes the configured
     * `OPTIONS` request to execute on the server. This method allows the client
     * to determine the supported HTTP methods and other capabilites of an endpoint,
     * without implying a resource action. See the individual overloads for
     * details on the return type.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */
    options(url, options = {}) {
        return this.request('OPTIONS', url, (/** @type {?} */ (options)));
    }
    /**
     * Constructs an observable that, when subscribed, causes the configured
     * `PATCH` request to execute on the server. See the individual overloads for
     * details on the return type.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */
    patch(url, body, options = {}) {
        return this.request('PATCH', url, addBody(options, body));
    }
    /**
     * Constructs an observable that, when subscribed, causes the configured
     * `POST` request to execute on the server. The server responds with the location of
     * the replaced resource. See the individual overloads for
     * details on the return type.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */
    post(url, body, options = {}) {
        return this.request('POST', url, addBody(options, body));
    }
    /**
     * Constructs an observable that, when subscribed, causes the configured
     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource
     * with a new set of values.
     * See the individual overloads for details on the return type.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */
    put(url, body, options = {}) {
        return this.request('PUT', url, addBody(options, body));
    }
}
HttpClient.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
HttpClient.ctorParameters = () => [
    { type: HttpHandler }
];
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Intercepts and handles an `HttpRequest` or `HttpResponse`.
 *
 * Most interceptors transform the outgoing request before passing it to the
 * next interceptor in the chain, by calling `next.handle(transformedReq)`.
 * An interceptor may transform the
 * response event stream as well, by applying additional RxJS operators on the stream
 * returned by `next.handle()`.
 *
 * More rarely, an interceptor may handle the request entirely,
 * and compose a new event stream instead of invoking `next.handle()`. This is an
 * acceptable behavior, but keep in mind that further interceptors will be skipped entirely.
 *
 * It is also rare but valid for an interceptor to return multiple responses on the
 * event stream for a single request.
 *
 * \@publicApi
 *
 * @see [HTTP Guide](guide/http#intercepting-requests-and-responses)
 *
 * \@usageNotes
 *
 * To use the same instance of `HttpInterceptors` for the entire app, import the `HttpClientModule`
 * only in your `AppModule`, and add the interceptors to the root application injector .
 * If you import `HttpClientModule` multiple times across different modules (for example, in lazy
 * loading modules), each import creates a new copy of the `HttpClientModule`, which overwrites the interceptors
 * provided in the root module.
 *
 * @record
 */
function HttpInterceptor() { }
if (false) {}
/**
 * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.
 *
 *
 */
class HttpInterceptorHandler {
    /**
     * @param {?} next
     * @param {?} interceptor
     */
    constructor(next, interceptor) {
        this.next = next;
        this.interceptor = interceptor;
    }
    /**
     * @param {?} req
     * @return {?}
     */
    handle(req) {
        return this.interceptor.intercept(req, this.next);
    }
}
if (false) {}
/**
 * A multi-provider token that represents the array of registered
 * `HttpInterceptor` objects.
 *
 * \@publicApi
 * @type {?}
 */
const HTTP_INTERCEPTORS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('HTTP_INTERCEPTORS');
class NoopInterceptor {
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        return next.handle(req);
    }
}
NoopInterceptor.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Every request made through JSONP needs a callback name that's unique across the
// whole page. Each request is assigned an id and the callback name is constructed
// from that. The next id to be assigned is tracked in a global variable here that
// is shared among all applications on the page.
/** @type {?} */
let nextRequestId = 0;
// Error text given when a JSONP script is injected, but doesn't invoke the callback
// passed in its URL.
/** @type {?} */
const JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';
// Error text given when a request is passed to the JsonpClientBackend that doesn't
// have a request method JSONP.
/** @type {?} */
const JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';
/** @type {?} */
const JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';
/**
 * DI token/abstract type representing a map of JSONP callbacks.
 *
 * In the browser, this should always be the `window` object.
 *
 *
 * @abstract
 */
class JsonpCallbackContext {
}
/**
 * Processes an `HttpRequest` with the JSONP method,
 * by performing JSONP style requests.
 * @see `HttpHandler`
 * @see `HttpXhrBackend`
 *
 * \@publicApi
 */
class JsonpClientBackend {
    /**
     * @param {?} callbackMap
     * @param {?} document
     */
    constructor(callbackMap, document) {
        this.callbackMap = callbackMap;
        this.document = document;
    }
    /**
     * Get the name of the next callback method, by incrementing the global `nextRequestId`.
     * @private
     * @return {?}
     */
    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }
    /**
     * Processes a JSONP request and returns an event stream of the results.
     * @param {?} req The request object.
     * @return {?} An observable of the response events.
     *
     */
    handle(req) {
        // Firstly, check both the method and response type. If either doesn't match
        // then the request was improperly routed here and cannot be handled.
        if (req.method !== 'JSONP') {
            throw new Error(JSONP_ERR_WRONG_METHOD);
        }
        else if (req.responseType !== 'json') {
            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);
        }
        // Everything else happens inside the Observable boundary.
        return new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"]((/**
         * @param {?} observer
         * @return {?}
         */
        (observer) => {
            // The first step to make a request is to generate the callback name, and replace the
            // callback placeholder in the URL with the name. Care has to be taken here to ensure
            // a trailing &, if matched, gets inserted back into the URL in the correct place.
            /** @type {?} */
            const callback = this.nextCallback();
            /** @type {?} */
            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);
            // Construct the <script> tag and point it at the URL.
            /** @type {?} */
            const node = this.document.createElement('script');
            node.src = url;
            // A JSONP request requires waiting for multiple callbacks. These variables
            // are closed over and track state across those callbacks.
            // The response object, if one has been received, or null otherwise.
            /** @type {?} */
            let body = null;
            // Whether the response callback has been called.
            /** @type {?} */
            let finished = false;
            // Whether the request has been cancelled (and thus any other callbacks)
            // should be ignored.
            /** @type {?} */
            let cancelled = false;
            // Set the response callback in this.callbackMap (which will be the window
            // object in the browser. The script being loaded via the <script> tag will
            // eventually call this callback.
            this.callbackMap[callback] = (/**
             * @param {?=} data
             * @return {?}
             */
            (data) => {
                // Data has been received from the JSONP script. Firstly, delete this callback.
                delete this.callbackMap[callback];
                // Next, make sure the request wasn't cancelled in the meantime.
                if (cancelled) {
                    return;
                }
                // Set state to indicate data was received.
                body = data;
                finished = true;
            });
            // cleanup() is a utility closure that removes the <script> from the page and
            // the response callback from the window. This logic is used in both the
            // success, error, and cancellation paths, so it's extracted out for convenience.
            /** @type {?} */
            const cleanup = (/**
             * @return {?}
             */
            () => {
                // Remove the <script> tag if it's still on the page.
                if (node.parentNode) {
                    node.parentNode.removeChild(node);
                }
                // Remove the response callback from the callbackMap (window object in the
                // browser).
                delete this.callbackMap[callback];
            });
            // onLoad() is the success callback which runs after the response callback
            // if the JSONP script loads successfully. The event itself is unimportant.
            // If something went wrong, onLoad() may run without the response callback
            // having been invoked.
            /** @type {?} */
            const onLoad = (/**
             * @param {?} event
             * @return {?}
             */
            (event) => {
                // Do nothing if the request has been cancelled.
                if (cancelled) {
                    return;
                }
                // Cleanup the page.
                cleanup();
                // Check whether the response callback has run.
                if (!finished) {
                    // It hasn't, something went wrong with the request. Return an error via
                    // the Observable error path. All JSONP errors have status 0.
                    observer.error(new HttpErrorResponse({
                        url,
                        status: 0,
                        statusText: 'JSONP Error',
                        error: new Error(JSONP_ERR_NO_CALLBACK),
                    }));
                    return;
                }
                // Success. body either contains the response body or null if none was
                // returned.
                observer.next(new HttpResponse({
                    body,
                    status: 200,
                    statusText: 'OK', url,
                }));
                // Complete the stream, the response is over.
                observer.complete();
            });
            // onError() is the error callback, which runs if the script returned generates
            // a Javascript error. It emits the error via the Observable error channel as
            // a HttpErrorResponse.
            /** @type {?} */
            const onError = (/**
             * @param {?} error
             * @return {?}
             */
            (error) => {
                // If the request was already cancelled, no need to emit anything.
                if (cancelled) {
                    return;
                }
                cleanup();
                // Wrap the error in a HttpErrorResponse.
                observer.error(new HttpErrorResponse({
                    error,
                    status: 0,
                    statusText: 'JSONP Error', url,
                }));
            });
            // Subscribe to both the success (load) and error events on the <script> tag,
            // and add it to the page.
            node.addEventListener('load', onLoad);
            node.addEventListener('error', onError);
            this.document.body.appendChild(node);
            // The request has now been successfully sent.
            observer.next({ type: HttpEventType.Sent });
            // Cancellation handler.
            return (/**
             * @return {?}
             */
            () => {
                // Track the cancellation so event listeners won't do anything even if already scheduled.
                cancelled = true;
                // Remove the event listeners so they won't run if the events later fire.
                node.removeEventListener('load', onLoad);
                node.removeEventListener('error', onError);
                // And finally, clean up the page.
                cleanup();
            });
        }));
    }
}
JsonpClientBackend.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
JsonpClientBackend.ctorParameters = () => [
    { type: JsonpCallbackContext },
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"],] }] }
];
if (false) {}
/**
 * Identifies requests with the method JSONP and
 * shifts them to the `JsonpClientBackend`.
 *
 * @see `HttpInterceptor`
 *
 * \@publicApi
 */
class JsonpInterceptor {
    /**
     * @param {?} jsonp
     */
    constructor(jsonp) {
        this.jsonp = jsonp;
    }
    /**
     * Identifies and handles a given JSONP request.
     * @param {?} req The outgoing request object to handle.
     * @param {?} next The next interceptor in the chain, or the backend
     * if no interceptors remain in the chain.
     * @return {?} An observable of the event stream.
     */
    intercept(req, next) {
        if (req.method === 'JSONP') {
            return this.jsonp.handle((/** @type {?} */ (req)));
        }
        // Fall through for normal HTTP requests.
        return next.handle(req);
    }
}
JsonpInterceptor.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
JsonpInterceptor.ctorParameters = () => [
    { type: JsonpClientBackend }
];
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const XSSI_PREFIX = /^\)\]\}',?\n/;
/**
 * Determine an appropriate URL for the response, by checking either
 * XMLHttpRequest.responseURL or the X-Request-URL header.
 * @param {?} xhr
 * @return {?}
 */
function getResponseUrl(xhr) {
    if ('responseURL' in xhr && xhr.responseURL) {
        return xhr.responseURL;
    }
    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
        return xhr.getResponseHeader('X-Request-URL');
    }
    return null;
}
/**
 * A wrapper around the `XMLHttpRequest` constructor.
 *
 * \@publicApi
 * @abstract
 */
class XhrFactory {
}
if (false) {}
/**
 * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.
 *
 */
class BrowserXhr {
    constructor() { }
    /**
     * @return {?}
     */
    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }
}
BrowserXhr.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
BrowserXhr.ctorParameters = () => [];
/**
 * Tracks a response from the server that does not yet have a body.
 * @record
 */
function PartialResponse() { }
if (false) {}
/**
 * Uses `XMLHttpRequest` to send requests to a backend server.
 * @see `HttpHandler`
 * @see `JsonpClientBackend`
 *
 * \@publicApi
 */
class HttpXhrBackend {
    /**
     * @param {?} xhrFactory
     */
    constructor(xhrFactory) {
        this.xhrFactory = xhrFactory;
    }
    /**
     * Processes a request and returns a stream of response events.
     * @param {?} req The request object.
     * @return {?} An observable of the response events.
     */
    handle(req) {
        // Quick check to give a better error message when a user attempts to use
        // HttpClient.jsonp() without installing the JsonpClientModule
        if (req.method === 'JSONP') {
            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);
        }
        // Everything happens on Observable subscription.
        return new rxjs__WEBPACK_IMPORTED_MODULE_1__["Observable"]((/**
         * @param {?} observer
         * @return {?}
         */
        (observer) => {
            // Start by setting up the XHR object with request method, URL, and withCredentials flag.
            /** @type {?} */
            const xhr = this.xhrFactory.build();
            xhr.open(req.method, req.urlWithParams);
            if (!!req.withCredentials) {
                xhr.withCredentials = true;
            }
            // Add all the requested headers.
            req.headers.forEach((/**
             * @param {?} name
             * @param {?} values
             * @return {?}
             */
            (name, values) => xhr.setRequestHeader(name, values.join(','))));
            // Add an Accept header if one isn't present already.
            if (!req.headers.has('Accept')) {
                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');
            }
            // Auto-detect the Content-Type header if one isn't present already.
            if (!req.headers.has('Content-Type')) {
                /** @type {?} */
                const detectedType = req.detectContentTypeHeader();
                // Sometimes Content-Type detection fails.
                if (detectedType !== null) {
                    xhr.setRequestHeader('Content-Type', detectedType);
                }
            }
            // Set the responseType if one was requested.
            if (req.responseType) {
                /** @type {?} */
                const responseType = req.responseType.toLowerCase();
                // JSON responses need to be processed as text. This is because if the server
                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,
                // xhr.response will be null, and xhr.responseText cannot be accessed to
                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON
                // is parsed by first requesting text and then applying JSON.parse.
                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));
            }
            // Serialize the request body if one is present. If not, this will be set to null.
            /** @type {?} */
            const reqBody = req.serializeBody();
            // If progress events are enabled, response headers will be delivered
            // in two events - the HttpHeaderResponse event and the full HttpResponse
            // event. However, since response headers don't change in between these
            // two events, it doesn't make sense to parse them twice. So headerResponse
            // caches the data extracted from the response whenever it's first parsed,
            // to ensure parsing isn't duplicated.
            /** @type {?} */
            let headerResponse = null;
            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest
            // state, and memoizes it into headerResponse.
            /** @type {?} */
            const partialFromXhr = (/**
             * @return {?}
             */
            () => {
                if (headerResponse !== null) {
                    return headerResponse;
                }
                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).
                /** @type {?} */
                const status = xhr.status === 1223 ? 204 : xhr.status;
                /** @type {?} */
                const statusText = xhr.statusText || 'OK';
                // Parse headers from XMLHttpRequest - this step is lazy.
                /** @type {?} */
                const headers = new HttpHeaders(xhr.getAllResponseHeaders());
                // Read the response URL from the XMLHttpResponse instance and fall back on the
                // request URL.
                /** @type {?} */
                const url = getResponseUrl(xhr) || req.url;
                // Construct the HttpHeaderResponse and memoize it.
                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });
                return headerResponse;
            });
            // Next, a few closures are defined for the various events which XMLHttpRequest can
            // emit. This allows them to be unregistered as event listeners later.
            // First up is the load event, which represents a response being fully available.
            /** @type {?} */
            const onLoad = (/**
             * @return {?}
             */
            () => {
                // Read response state from the memoized partial data.
                let { headers, status, statusText, url } = partialFromXhr();
                // The body will be read out if present.
                /** @type {?} */
                let body = null;
                if (status !== 204) {
                    // Use XMLHttpRequest.response if set, responseText otherwise.
                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;
                }
                // Normalize another potential bug (this one comes from CORS).
                if (status === 0) {
                    status = !!body ? 200 : 0;
                }
                // ok determines whether the response will be transmitted on the event or
                // error channel. Unsuccessful status codes (not 2xx) will always be errors,
                // but a successful status code can still result in an error if the user
                // asked for JSON data and the body cannot be parsed as such.
                /** @type {?} */
                let ok = status >= 200 && status < 300;
                // Check whether the body needs to be parsed as JSON (in many cases the browser
                // will have done that already).
                if (req.responseType === 'json' && typeof body === 'string') {
                    // Save the original body, before attempting XSSI prefix stripping.
                    /** @type {?} */
                    const originalBody = body;
                    body = body.replace(XSSI_PREFIX, '');
                    try {
                        // Attempt the parse. If it fails, a parse error should be delivered to the user.
                        body = body !== '' ? JSON.parse(body) : null;
                    }
                    catch (error) {
                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a
                        // JSON response. Restore the original body (including any XSSI prefix) to deliver
                        // a better error response.
                        body = originalBody;
                        // If this was an error request to begin with, leave it as a string, it probably
                        // just isn't JSON. Otherwise, deliver the parsing error to the user.
                        if (ok) {
                            // Even though the response status was 2xx, this is still an error.
                            ok = false;
                            // The parse error contains the text of the body that failed to parse.
                            body = (/** @type {?} */ ({ error, text: body }));
                        }
                    }
                }
                if (ok) {
                    // A successful response is delivered on the event stream.
                    observer.next(new HttpResponse({
                        body,
                        headers,
                        status,
                        statusText,
                        url: url || undefined,
                    }));
                    // The full body has been received and delivered, no further events
                    // are possible. This request is complete.
                    observer.complete();
                }
                else {
                    // An unsuccessful request is delivered on the error channel.
                    observer.error(new HttpErrorResponse({
                        // The error in this case is the response body (error from the server).
                        error: body,
                        headers,
                        status,
                        statusText,
                        url: url || undefined,
                    }));
                }
            });
            // The onError callback is called when something goes wrong at the network level.
            // Connection timeout, DNS error, offline, etc. These are actual errors, and are
            // transmitted on the error channel.
            /** @type {?} */
            const onError = (/**
             * @param {?} error
             * @return {?}
             */
            (error) => {
                const { url } = partialFromXhr();
                /** @type {?} */
                const res = new HttpErrorResponse({
                    error,
                    status: xhr.status || 0,
                    statusText: xhr.statusText || 'Unknown Error',
                    url: url || undefined,
                });
                observer.error(res);
            });
            // The sentHeaders flag tracks whether the HttpResponseHeaders event
            // has been sent on the stream. This is necessary to track if progress
            // is enabled since the event will be sent on only the first download
            // progerss event.
            /** @type {?} */
            let sentHeaders = false;
            // The download progress event handler, which is only registered if
            // progress events are enabled.
            /** @type {?} */
            const onDownProgress = (/**
             * @param {?} event
             * @return {?}
             */
            (event) => {
                // Send the HttpResponseHeaders event if it hasn't been sent already.
                if (!sentHeaders) {
                    observer.next(partialFromXhr());
                    sentHeaders = true;
                }
                // Start building the download progress event to deliver on the response
                // event stream.
                /** @type {?} */
                let progressEvent = {
                    type: HttpEventType.DownloadProgress,
                    loaded: event.loaded,
                };
                // Set the total number of bytes in the event if it's available.
                if (event.lengthComputable) {
                    progressEvent.total = event.total;
                }
                // If the request was for text content and a partial response is
                // available on XMLHttpRequest, include it in the progress event
                // to allow for streaming reads.
                if (req.responseType === 'text' && !!xhr.responseText) {
                    progressEvent.partialText = xhr.responseText;
                }
                // Finally, fire the event.
                observer.next(progressEvent);
            });
            // The upload progress event handler, which is only registered if
            // progress events are enabled.
            /** @type {?} */
            const onUpProgress = (/**
             * @param {?} event
             * @return {?}
             */
            (event) => {
                // Upload progress events are simpler. Begin building the progress
                // event.
                /** @type {?} */
                let progress = {
                    type: HttpEventType.UploadProgress,
                    loaded: event.loaded,
                };
                // If the total number of bytes being uploaded is available, include
                // it.
                if (event.lengthComputable) {
                    progress.total = event.total;
                }
                // Send the event.
                observer.next(progress);
            });
            // By default, register for load and error events.
            xhr.addEventListener('load', onLoad);
            xhr.addEventListener('error', onError);
            // Progress events are only enabled if requested.
            if (req.reportProgress) {
                // Download progress is always enabled if requested.
                xhr.addEventListener('progress', onDownProgress);
                // Upload progress depends on whether there is a body to upload.
                if (reqBody !== null && xhr.upload) {
                    xhr.upload.addEventListener('progress', onUpProgress);
                }
            }
            // Fire the request, and notify the event stream that it was fired.
            xhr.send((/** @type {?} */ (reqBody)));
            observer.next({ type: HttpEventType.Sent });
            // This is the return from the Observable function, which is the
            // request cancellation handler.
            return (/**
             * @return {?}
             */
            () => {
                // On a cancellation, remove all registered event listeners.
                xhr.removeEventListener('error', onError);
                xhr.removeEventListener('load', onLoad);
                if (req.reportProgress) {
                    xhr.removeEventListener('progress', onDownProgress);
                    if (reqBody !== null && xhr.upload) {
                        xhr.upload.removeEventListener('progress', onUpProgress);
                    }
                }
                // Finally, abort the in-flight request.
                xhr.abort();
            });
        }));
    }
}
HttpXhrBackend.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
HttpXhrBackend.ctorParameters = () => [
    { type: XhrFactory }
];
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const XSRF_COOKIE_NAME = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('XSRF_COOKIE_NAME');
/** @type {?} */
const XSRF_HEADER_NAME = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('XSRF_HEADER_NAME');
/**
 * Retrieves the current XSRF token to use with the next outgoing request.
 *
 * \@publicApi
 * @abstract
 */
class HttpXsrfTokenExtractor {
}
if (false) {}
/**
 * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.
 */
class HttpXsrfCookieExtractor {
    /**
     * @param {?} doc
     * @param {?} platform
     * @param {?} cookieName
     */
    constructor(doc, platform, cookieName) {
        this.doc = doc;
        this.platform = platform;
        this.cookieName = cookieName;
        this.lastCookieString = '';
        this.lastToken = null;
        /**
         * \@internal for testing
         */
        this.parseCount = 0;
    }
    /**
     * @return {?}
     */
    getToken() {
        if (this.platform === 'server') {
            return null;
        }
        /** @type {?} */
        const cookieString = this.doc.cookie || '';
        if (cookieString !== this.lastCookieString) {
            this.parseCount++;
            this.lastToken = Object(_angular_common__WEBPACK_IMPORTED_MODULE_3__["ɵparseCookieValue"])(cookieString, this.cookieName);
            this.lastCookieString = cookieString;
        }
        return this.lastToken;
    }
}
HttpXsrfCookieExtractor.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
HttpXsrfCookieExtractor.ctorParameters = () => [
    { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"], args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"],] }] },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"], args: [XSRF_COOKIE_NAME,] }] }
];
if (false) {}
/**
 * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.
 */
class HttpXsrfInterceptor {
    /**
     * @param {?} tokenService
     * @param {?} headerName
     */
    constructor(tokenService, headerName) {
        this.tokenService = tokenService;
        this.headerName = headerName;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        /** @type {?} */
        const lcUrl = req.url.toLowerCase();
        // Skip both non-mutating requests and absolute URLs.
        // Non-mutating requests don't require a token, and absolute URLs require special handling
        // anyway as the cookie set
        // on our origin is not the same as the token expected by another origin.
        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||
            lcUrl.startsWith('https://')) {
            return next.handle(req);
        }
        /** @type {?} */
        const token = this.tokenService.getToken();
        // Be careful not to overwrite an existing header of the same name.
        if (token !== null && !req.headers.has(this.headerName)) {
            req = req.clone({ headers: req.headers.set(this.headerName, token) });
        }
        return next.handle(req);
    }
}
HttpXsrfInterceptor.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
HttpXsrfInterceptor.ctorParameters = () => [
    { type: HttpXsrfTokenExtractor },
    { type: String, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"], args: [XSRF_HEADER_NAME,] }] }
];
if (false) {}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * An injectable `HttpHandler` that applies multiple interceptors
 * to a request before passing it to the given `HttpBackend`.
 *
 * The interceptors are loaded lazily from the injector, to allow
 * interceptors to themselves inject classes depending indirectly
 * on `HttpInterceptingHandler` itself.
 * @see `HttpInterceptor`
 */
class HttpInterceptingHandler {
    /**
     * @param {?} backend
     * @param {?} injector
     */
    constructor(backend, injector) {
        this.backend = backend;
        this.injector = injector;
        this.chain = null;
    }
    /**
     * @param {?} req
     * @return {?}
     */
    handle(req) {
        if (this.chain === null) {
            /** @type {?} */
            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);
            this.chain = interceptors.reduceRight((/**
             * @param {?} next
             * @param {?} interceptor
             * @return {?}
             */
            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);
        }
        return this.chain.handle(req);
    }
}
HttpInterceptingHandler.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"] }
];
/** @nocollapse */
HttpInterceptingHandler.ctorParameters = () => [
    { type: HttpBackend },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"] }
];
if (false) {}
/**
 * Constructs an `HttpHandler` that applies interceptors
 * to a request before passing it to the given `HttpBackend`.
 *
 * Use as a factory function within `HttpClientModule`.
 *
 *
 * @param {?} backend
 * @param {?=} interceptors
 * @return {?}
 */
function interceptingHandler(backend, interceptors = []) {
    if (!interceptors) {
        return backend;
    }
    return interceptors.reduceRight((/**
     * @param {?} next
     * @param {?} interceptor
     * @return {?}
     */
    (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), backend);
}
/**
 * Factory function that determines where to store JSONP callbacks.
 *
 * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist
 * in test environments. In that case, callbacks are stored on an anonymous object instead.
 *
 *
 * @return {?}
 */
function jsonpCallbackContext() {
    if (typeof window === 'object') {
        return window;
    }
    return {};
}
/**
 * Configures XSRF protection support for outgoing requests.
 *
 * For a server that supports a cookie-based XSRF protection system,
 * use directly to configure XSRF protection with the correct
 * cookie and header names.
 *
 * If no names are supplied, the default cookie name is `XSRF-TOKEN`
 * and the default header name is `X-XSRF-TOKEN`.
 *
 * \@publicApi
 */
class HttpClientXsrfModule {
    /**
     * Disable the default XSRF protection.
     * @return {?}
     */
    static disable() {
        return {
            ngModule: HttpClientXsrfModule,
            providers: [
                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },
            ],
        };
    }
    /**
     * Configure XSRF protection.
     * @param {?=} options An object that can specify either or both
     * cookie name or header name.
     * - Cookie name default is `XSRF-TOKEN`.
     * - Header name default is `X-XSRF-TOKEN`.
     *
     * @return {?}
     */
    static withOptions(options = {}) {
        return {
            ngModule: HttpClientXsrfModule,
            providers: [
                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],
                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],
            ],
        };
    }
}
HttpClientXsrfModule.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"], args: [{
                providers: [
                    HttpXsrfInterceptor,
                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },
                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },
                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },
                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },
                ],
            },] }
];
/**
 * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`
 * with supporting services for XSRF. Automatically imported by `HttpClientModule`.
 *
 * You can add interceptors to the chain behind `HttpClient` by binding them to the
 * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.
 *
 * \@publicApi
 */
class HttpClientModule {
}
HttpClientModule.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"], args: [{
                /**
                 * Optional configuration for XSRF protection.
                 */
                imports: [
                    HttpClientXsrfModule.withOptions({
                        cookieName: 'XSRF-TOKEN',
                        headerName: 'X-XSRF-TOKEN',
                    }),
                ],
                /**
                 * Configures the [dependency injector](guide/glossary#injector) where it is imported
                 * with supporting services for HTTP communications.
                 */
                providers: [
                    HttpClient,
                    { provide: HttpHandler, useClass: HttpInterceptingHandler },
                    HttpXhrBackend,
                    { provide: HttpBackend, useExisting: HttpXhrBackend },
                    BrowserXhr,
                    { provide: XhrFactory, useExisting: BrowserXhr },
                ],
            },] }
];
/**
 * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`
 * with supporting services for JSONP.
 * Without this module, Jsonp requests reach the backend
 * with method JSONP, where they are rejected.
 *
 * You can add interceptors to the chain behind `HttpClient` by binding them to the
 * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.
 *
 * \@publicApi
 */
class HttpClientJsonpModule {
}
HttpClientJsonpModule.decorators = [
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"], args: [{
                providers: [
                    JsonpClientBackend,
                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },
                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },
                ],
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * Generated bundle index. Do not edit.
 */


//# sourceMappingURL=http.js.map


/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/causes/causes.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/causes/causes.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n<section id=\"causes\" class=\"container-fluid causes\">\n  <div class=\"container col-md-12 col-sm-12  col-xs-12 causes__container\">\n    <ul class=\"row center-md middle-md causes__row causes__list\">\n      <li class=\"col-md col-sm col-xs-12 causes__item\" *ngFor=\"let cause of causes\">\n        <div class=\"causes__item-content\">\n          <figure class=\"causes__picture\"><img\n            class=\"cover\"\n            [src]=\"cause.img\"\n            alt=\"Picture description\"></figure>\n          <h3 class=\"causes__title\">{{cause.title}}</h3>\n          <p class=\"causes__paragraph\">{{cause.paragraph}} </p>\n        </div>\n        <button class=\"causes__button\">+</button>\n      </li>\n    </ul>\n  </div>\n</section>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/events/events.component.html":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/events/events.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<section id=\"events\" class=\"events\">\n  <div class=\"row events__row\">\n\n    <nav class=\" subtitle-line-below col-md-12 col-sm-12  col-xs-12\" aria-label=\"Latest Events\">\n      <ul class=\"subtitle-line-below__list\">\n        <li class=\"subtitle-line-below__item \">\n          <button class=\"start-md start-sm start-xs subtitle-line-below__button subtitle-line-below__button--active\">\n            Latest Events\n          </button>\n        </li>\n        <li class=\"subtitle-line-below__item\">\n          <button class=\"start-md start-sm start-xs  subtitle-line-below__button\"><img\n            src=\"assets/icons/option-icon.svg\" alt=\"Picture description\"></button>\n        </li>\n      </ul>\n    </nav>\n    <ng-container *ngFor=\"let event of events; let i = index\" >\n      <article class=\"feed__item col-md-12 col-sm-12 col-xs-12\" *ngIf=\"i===0\">\n        <figure class=\"feed__image\">\n          <img class=\"cover\"\n               [src]=\"event.img\"\n               alt=\"Picture description\">\n        </figure>\n        <div class=\"calendar\">\n          <time datetime=\"2019-06-14 20:00\" class=\"calendar__date\">{{event.month}} <br> <span>{{event.day}}</span></time>\n        </div>\n        <div class=\"feed__content\">\n          <h3 class=\"feed__title\">{{event.title}}</h3>\n          <p class=\"feed__paragraph\">{{event.paragraph}}</p>\n        </div>\n      </article>\n\n      <article class=\"feed__item col-md-6 col-sm-6 col-xs-12\" *ngIf=\"i>0\">\n        <figure class=\"feed__image\">\n          <img class=\"cover\"\n               [src]=\"event.img\"\n               alt=\"Picture description\">\n        </figure>\n        <div class=\"calendar\">\n          <time datetime=\"2019-06-14 20:00\" class=\"calendar__date\">{{event.month}} <br> <span>{{event.day}}</span></time>\n        </div>\n        <div class=\"feed__content\">\n          <h3 class=\"feed__title\">{{event.title}}</h3>\n          <p class=\"feed__paragraph\">{{event.paragraph}}</p>\n        </div>\n      </article>\n    </ng-container>\n  </div>\n</section>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/gallery/gallery.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/gallery/gallery.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<section class=\"row gallery\">\n  <nav class=\" subtitle-line-below col-md-12 col-sm-12  col-xs-12\" aria-label=\"gallery\">\n    <ul class=\"subtitle-line-below__list\">\n      <li class=\"subtitle-line-below__item \">\n        <button class=\"start-md start-sm start-xs subtitle-line-below__button subtitle-line-below__button--active\">\n          Gallery\n        </button>\n      </li>\n      <li class=\"subtitle-line-below__item\">\n        <button class=\"start-md start-sm start-xs  subtitle-line-below__button\"><img\n          src=\"assets/icons/option-icon.svg\" alt=\"Picture description\"></button>\n      </li>\n    </ul>\n  </nav>\n  <ul class=\"basic-slider__list  col-md-12 col-sm-12  col-xs-12\">\n    <li class=\"basic-slider__item col-md-4 col-sm-5 col-xs-12\" *ngFor=\"let gallery of gallery\">\n      <button class=\"basic-slider__button\">+</button>\n      <figure class=\"feed__image\">\n        <img class=\"cover\"\n             [src]=\"gallery.img\"\n             alt=\"Picture description\">\n      </figure>\n    </li>\n  </ul>\n</section>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/news/news.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/news/news.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<section id=\"news\" class=\"news\">\n  <div class=\"row news__row\">\n\n    <nav class=\" subtitle-line-below col-md-12 col-sm-12  col-xs-12\" aria-label=\"Latest News\">\n      <ul class=\"subtitle-line-below__list\">\n        <li class=\"subtitle-line-below__item\">\n          <button class=\"start-md start-sm start-xs subtitle-line-below__button subtitle-line-below__button--active\">\n            Latest News\n          </button>\n        </li>\n        <li class=\"subtitle-line-below__item\">\n          <button class=\"start-md start-sm start-xs  subtitle-line-below__button\"><img\n            src=\"assets/icons/option-icon.svg\" alt=\"Picture description\"></button>\n        </li>\n      </ul>\n    </nav>\n\n      <article class=\"feed__item col-md-12 col-sm-12 col-xs-12\" *ngFor=\"let news of news; let i = index\">\n        <figure class=\"feed__image\">\n          <img class=\"cover\"\n               [src]=\"news.img\"\n               alt=\"Picture description\">\n        </figure>\n        <div class=\"feed__content\">\n          <h3 class=\"feed__title\">{{news.title}}</h3>\n          <time datetime=\"2019-06-14 20:00\" class=\"calendar__date--inline-text\">{{news.date}}</time>\n          <p class=\"feed__paragraph\">{{news.paragraph}}.</p>\n        </div>\n      </article>\n\n  </div>\n</section>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/presentation/presentation.component.html":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/presentation/presentation.component.html ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<section id=\"presentation\" class=\"container-fluid presentation\" *ngIf=\"presentation\" [style.background]=\"'url('+ presentation.img +')'\">\n  <div class=\"container col-md-12 col-sm-12  col-xs-12 presentation__container\">\n    <div class=\"row presentation__row middle-xs\">\n      <div class=\"col-md-7\">\n        <h1 class=\"presentation__title \" >{{presentation.title}}</h1>\n        <p class=\"presentation__paragraph \">{{presentation.paragraph}}\n        </p>\n        <button class=\"presentation__read-more-button\">Read More</button>\n      </div>\n    </div>\n  </div>\n</section>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/sponsors/sponsors.component.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/sponsors/sponsors.component.html ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<section class=\"sponsors\">\n  <div class=\"row sponsors__row\">\n    <nav class=\" subtitle-line-below col-md-12 col-sm-12  col-xs-12\" aria-label=\"sponsors\">\n      <ul class=\"subtitle-line-below__list\">\n        <li class=\"subtitle-line-below__item\">\n          <button class=\"start-md start-sm start-xs subtitle-line-below__button subtitle-line-below__button--active\">\n            Sponsors\n          </button>\n        </li>\n      </ul>\n    </nav>\n    <button (click)=\"nextItem(list)\" class=\"icon sponsors__next-button\"><img src=\"assets/icons/next-icon.svg\" alt=\"Picture description\"></button>\n    <button (click)=\"previousItem(list)\" class=\"icon sponsors__next-button\"><img src=\"assets/icons/next-icon.svg\" alt=\"Picture description\"></button>\n    <ul #list id=\"sponsors-slider\" class=\"feed__items col-md-12 col-sm-12 col-xs-12 \">\n      <li class=\" feed__item\" *ngFor=\"let sponsor of sponsors\">\n        <figure class=\"feed__image\">\n          <img class=\"cover\"\n               [src]=\"sponsor.img\"\n               alt=\"Picture description\">\n        </figure>\n      </li>\n    </ul>\n  </div>\n</section>\n");

/***/ }),

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/pages/home/home.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/pages/home/home.component.html ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<app-presentation [presentation]=\"presentation\"></app-presentation>\n<app-causes></app-causes>\n\n<section class=\"feed container-fluid\">\n  <div class=\"container col-md-12 col-sm-12 col-xs-12\">\n    <app-gallery [gallery]=\"gallery\" ></app-gallery>\n\n    <section class=\"latest row\">\n      <app-events [events]=\"events\" class=\"col-md-8 col-sm-12 col-xs-12\"></app-events>\n      <app-news class=\"col-md-4 col-sm-12 col-xs-12\"></app-news>\n      <app-sponsors class=\"col-md-12 col-sm-12 col-xs-12\"></app-sponsors>\n    </section>\n  </div>\n</section>\n");

/***/ }),

/***/ "./src/app/modules/home/components/causes/causes.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/modules/home/components/causes/causes.component.scss ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,600,700,800&display=swap\");\n.container-fluid,\n.container {\n  margin-right: auto;\n  margin-left: auto;\n}\n.container-fluid {\n  padding-right: 2rem;\n  padding-left: 2rem;\n}\n.row {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-right: -0.5rem;\n  margin-left: -0.5rem;\n}\n.row.reverse {\n  flex-direction: row-reverse;\n}\n.col.reverse {\n  flex-direction: column-reverse;\n}\n.col-xs,\n.col-xs-1,\n.col-xs-2,\n.col-xs-3,\n.col-xs-4,\n.col-xs-5,\n.col-xs-6,\n.col-xs-7,\n.col-xs-8,\n.col-xs-9,\n.col-xs-10,\n.col-xs-11,\n.col-xs-12,\n.col-xs-offset-0,\n.col-xs-offset-1,\n.col-xs-offset-2,\n.col-xs-offset-3,\n.col-xs-offset-4,\n.col-xs-offset-5,\n.col-xs-offset-6,\n.col-xs-offset-7,\n.col-xs-offset-8,\n.col-xs-offset-9,\n.col-xs-offset-10,\n.col-xs-offset-11,\n.col-xs-offset-12 {\n  box-sizing: border-box;\n  flex: 0 0 auto;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.col-xs {\n  flex-grow: 1;\n  flex-basis: 0;\n  max-width: 100%;\n}\n.col-xs-1 {\n  flex-basis: 8.33333333%;\n  max-width: 8.33333333%;\n}\n.col-xs-2 {\n  flex-basis: 16.66666667%;\n  max-width: 16.66666667%;\n}\n.col-xs-3 {\n  flex-basis: 25%;\n  max-width: 25%;\n}\n.col-xs-4 {\n  flex-basis: 33.33333333%;\n  max-width: 33.33333333%;\n}\n.col-xs-5 {\n  flex-basis: 41.66666667%;\n  max-width: 41.66666667%;\n}\n.col-xs-6 {\n  flex-basis: 50%;\n  max-width: 50%;\n}\n.col-xs-7 {\n  flex-basis: 58.33333333%;\n  max-width: 58.33333333%;\n}\n.col-xs-8 {\n  flex-basis: 66.66666667%;\n  max-width: 66.66666667%;\n}\n.col-xs-9 {\n  flex-basis: 75%;\n  max-width: 75%;\n}\n.col-xs-10 {\n  flex-basis: 83.33333333%;\n  max-width: 83.33333333%;\n}\n.col-xs-11 {\n  flex-basis: 91.66666667%;\n  max-width: 91.66666667%;\n}\n.col-xs-12 {\n  flex-basis: 100%;\n  max-width: 100%;\n}\n.col-xs-offset-0 {\n  margin-left: 0;\n}\n.col-xs-offset-1 {\n  margin-left: 8.33333333%;\n}\n.col-xs-offset-2 {\n  margin-left: 16.66666667%;\n}\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n.col-xs-offset-4 {\n  margin-left: 33.33333333%;\n}\n.col-xs-offset-5 {\n  margin-left: 41.66666667%;\n}\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n.col-xs-offset-7 {\n  margin-left: 58.33333333%;\n}\n.col-xs-offset-8 {\n  margin-left: 66.66666667%;\n}\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n.col-xs-offset-10 {\n  margin-left: 83.33333333%;\n}\n.col-xs-offset-11 {\n  margin-left: 91.66666667%;\n}\n.start-xs {\n  justify-content: flex-start;\n  text-align: start;\n}\n.center-xs {\n  justify-content: center;\n  text-align: center;\n}\n.end-xs {\n  justify-content: flex-end;\n  text-align: end;\n}\n.top-xs {\n  align-items: flex-start;\n}\n.middle-xs {\n  align-items: center;\n}\n.bottom-xs {\n  align-items: flex-end;\n}\n.around-xs {\n  justify-content: space-around;\n}\n.between-xs {\n  justify-content: space-between;\n}\n.first-xs {\n  order: -1;\n}\n.last-xs {\n  order: 1;\n}\n@media only screen and (min-width: 48em) {\n  .container {\n    width: 49rem;\n  }\n\n  .col-sm,\n.col-sm-1,\n.col-sm-2,\n.col-sm-3,\n.col-sm-4,\n.col-sm-5,\n.col-sm-6,\n.col-sm-7,\n.col-sm-8,\n.col-sm-9,\n.col-sm-10,\n.col-sm-11,\n.col-sm-12,\n.col-sm-offset-0,\n.col-sm-offset-1,\n.col-sm-offset-2,\n.col-sm-offset-3,\n.col-sm-offset-4,\n.col-sm-offset-5,\n.col-sm-offset-6,\n.col-sm-offset-7,\n.col-sm-offset-8,\n.col-sm-offset-9,\n.col-sm-offset-10,\n.col-sm-offset-11,\n.col-sm-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-sm {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-sm-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-sm-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-sm-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-sm-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-sm-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-sm-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-sm-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-sm-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-sm-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-sm-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-sm-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-sm-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-sm-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-sm-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-sm-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-sm-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-sm-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-sm-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-sm-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-sm-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-sm-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-sm {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-sm {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-sm {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-sm {\n    align-items: flex-start;\n  }\n\n  .middle-sm {\n    align-items: center;\n  }\n\n  .bottom-sm {\n    align-items: flex-end;\n  }\n\n  .around-sm {\n    justify-content: space-around;\n  }\n\n  .between-sm {\n    justify-content: space-between;\n  }\n\n  .first-sm {\n    order: -1;\n  }\n\n  .last-sm {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 64em) {\n  .container {\n    width: 65rem;\n  }\n\n  .col-md,\n.col-md-1,\n.col-md-2,\n.col-md-3,\n.col-md-4,\n.col-md-5,\n.col-md-6,\n.col-md-7,\n.col-md-8,\n.col-md-9,\n.col-md-10,\n.col-md-11,\n.col-md-12,\n.col-md-offset-0,\n.col-md-offset-1,\n.col-md-offset-2,\n.col-md-offset-3,\n.col-md-offset-4,\n.col-md-offset-5,\n.col-md-offset-6,\n.col-md-offset-7,\n.col-md-offset-8,\n.col-md-offset-9,\n.col-md-offset-10,\n.col-md-offset-11,\n.col-md-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-md {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-md-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-md-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-md-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-md-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-md-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-md-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-md-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-md-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-md-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-md-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-md-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-md-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-md-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-md-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-md-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-md-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-md-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-md-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-md-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-md-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-md-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-md {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-md {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-md {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-md {\n    align-items: flex-start;\n  }\n\n  .middle-md {\n    align-items: center;\n  }\n\n  .bottom-md {\n    align-items: flex-end;\n  }\n\n  .around-md {\n    justify-content: space-around;\n  }\n\n  .between-md {\n    justify-content: space-between;\n  }\n\n  .first-md {\n    order: -1;\n  }\n\n  .last-md {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 75em) {\n  .container {\n    width: 76rem;\n  }\n\n  .col-lg,\n.col-lg-1,\n.col-lg-2,\n.col-lg-3,\n.col-lg-4,\n.col-lg-5,\n.col-lg-6,\n.col-lg-7,\n.col-lg-8,\n.col-lg-9,\n.col-lg-10,\n.col-lg-11,\n.col-lg-12,\n.col-lg-offset-0,\n.col-lg-offset-1,\n.col-lg-offset-2,\n.col-lg-offset-3,\n.col-lg-offset-4,\n.col-lg-offset-5,\n.col-lg-offset-6,\n.col-lg-offset-7,\n.col-lg-offset-8,\n.col-lg-offset-9,\n.col-lg-offset-10,\n.col-lg-offset-11,\n.col-lg-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-lg {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-lg-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-lg-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-lg-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-lg-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-lg-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-lg-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-lg-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-lg-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-lg-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-lg-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-lg-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-lg-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-lg-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-lg-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-lg-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-lg-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-lg-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-lg-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-lg-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-lg-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-lg-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-lg {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-lg {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-lg {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-lg {\n    align-items: flex-start;\n  }\n\n  .middle-lg {\n    align-items: center;\n  }\n\n  .bottom-lg {\n    align-items: flex-end;\n  }\n\n  .around-lg {\n    justify-content: space-around;\n  }\n\n  .between-lg {\n    justify-content: space-between;\n  }\n\n  .first-lg {\n    order: -1;\n  }\n\n  .last-lg {\n    order: 1;\n  }\n}\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n:root {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --font-color-custom-black: #000000;\n  --pink-color-2: #ebb8b8;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --border-causes-color: #dfdfe1;\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #f9f9f9;\n  --border-input-color: #ebebeb;\n  --white-color: #ffffff;\n  --body-background: #ffffff;\n  --body-background-contrast: #ffffff;\n  --gray-color-0: #fbfbfb;\n  --gray-color-1: #f0f0f0;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #666666;\n  --gray-color-5: #444444;\n  --gray-color-6: #393939;\n  --gray-color-7: #323232;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\n.dark-mode {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --pink-color-2: #ebb8b8;\n  --font-color-custom-black: #bbbbbb;\n  --border-causes-color: #393939;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #393939;\n  --border-input-color: #ebebeb;\n  --body-background: #1c1c1e;\n  --body-background-contrast: #1c1c1e;\n  --white-color: #ffffff;\n  --gray-color-0: #393939;\n  --gray-color-1: #2a2a2a;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #bbbbbb;\n  --gray-color-5: #bbbbbb;\n  --gray-color-6: #393939;\n  --gray-color-7: #bbbbbb;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\nbody {\n  background-color: var(--body-background);\n  transition: 0.25s;\n}\n* {\n  font-family: \"Open Sans\", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n}\na {\n  text-decoration: none;\n}\nli {\n  list-style-type: none;\n}\nul {\n  margin: 0;\n  padding: 0;\n}\nbutton {\n  border: none;\n  padding: 0;\n  background: transparent;\n}\nbutton:hover {\n  cursor: pointer;\n}\nbutton:focus, a:focus, input:focus, textarea:focus {\n  outline: none;\n  -webkit-filter: brightness(0.8);\n          filter: brightness(0.8);\n}\ninput, textarea {\n  border: solid 0.0625rem var(--border-input-color);\n  background: var(--background-input-color);\n  min-height: 1.875rem;\n  color: var(--font-color-header);\n}\n.break {\n  flex-basis: 100%;\n  height: 0;\n}\n.basic-slider__list::-webkit-scrollbar, .gallery__list::-webkit-scrollbar {\n  display: none;\n}\n.small-font-label, .causes__button {\n  font-weight: 600;\n  font-size: 0.75rem;\n}\n.label, label {\n  color: var(--gray-color-4);\n  font-size: 0.875rem;\n  font-weight: 600;\n}\n.icon {\n  width: 1.875rem;\n  height: 1.875rem;\n}\n.heading-1 {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n.heading-2, .causes__title {\n  font-weight: 600;\n  font-size: 1.625rem;\n}\n.heading-3, .feed__title, .subtitle-line-below__button {\n  font-weight: 600;\n  font-size: 1rem;\n  line-height: 1.3rem;\n}\n.heading-4, .subtitle-line-below__text {\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.3rem;\n}\n.heading-5 {\n  font-weight: 700;\n  font-size: 1rem;\n  color: var(--gray-color-4);\n  text-transform: uppercase;\n  height: auto;\n}\n.block-scroll {\n  overflow: hidden !important;\n  height: 100vh !important;\n}\n.cover {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n     object-fit: cover;\n  -o-object-position: 50% 50%;\n     object-position: 50% 50%;\n}\nfigure {\n  background: var(--gray-color-2);\n}\n.paragraph, .paragraph-light, .causes__paragraph, .feed__paragraph {\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n}\n.paragraph-light, .causes__paragraph, .feed__paragraph {\n  font-weight: 300;\n}\n.simple-button {\n  border: none;\n  color: var(--white-color);\n  background-color: var(--gray-color-9);\n  font-weight: 700;\n  font-size: 0.875rem;\n}\n/*========================== Subtitles with line below ==========================*/\n.subtitle-line-below {\n  margin-bottom: 2.8125rem;\n}\n.subtitle-line-below__list {\n  display: flex;\n}\n.feed .subtitle-line-below__item:nth-last-of-type(1) {\n  flex: 1;\n}\n.subtitle-line-below__item:nth-last-of-type(1) > .subtitle-line-below__button {\n  margin-left: 0.125rem;\n  padding: 0 0.25rem;\n}\n.subtitle-line-below__button {\n  font-size: 1.5rem;\n  width: 100%;\n  color: var(--gray-color-7);\n}\n.subtitle-line-below__button, .subtitle-line-below__text {\n  position: relative;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n}\n.subtitle-line-below__button:before, .subtitle-line-below__text:before {\n  content: \"\";\n  width: 100%;\n  height: 0.4375rem;\n  background: var(--primary-light-color);\n  position: absolute;\n  top: 2.2rem;\n  left: 0;\n}\n.subtitle-line-below__button:hover:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__button--active:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__text:before {\n  background-color: var(--primary-color);\n  width: 110%;\n  height: 0.25rem;\n}\n.subtitle-line-below__text {\n  text-transform: uppercase;\n  color: var(--white-color);\n}\n/*========================== Feed Section - Gallery, Events, News ==========================*/\n.feed__item {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2.8125rem;\n}\n.feed__image {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n.feed__content {\n  flex: 1;\n}\n.feed__title {\n  margin-bottom: 0.625rem;\n  color: var(--font-color-custom-black);\n}\n.feed__paragraph {\n  color: var(--gray-color-4);\n}\n/*========================== Causes Section ==========================*/\n.causes {\n  background-color: var(--gray-color-1);\n  height: 35.1875rem;\n  position: relative;\n}\n.causes:before {\n  content: \"\";\n  width: 100%;\n  border-top: 0.125rem solid var(--border-causes-color);\n  height: 0.125rem;\n  background: var(--body-background);\n  position: absolute;\n  margin-left: -2rem;\n  top: 12.625rem;\n}\n.causes::after {\n  content: \"\";\n  height: 1.34375rem;\n  width: 100%;\n  background: var(--body-background);\n  bottom: 0;\n  position: absolute;\n  margin-left: -2rem;\n  z-index: 0;\n}\n.causes__container, .causes__row, .causes__item {\n  height: 100%;\n}\n.causes__list::-webkit-scrollbar {\n  display: none;\n}\n.causes__list {\n  display: flex;\n  overflow-x: auto;\n  overflow-y: hidden;\n  flex-wrap: nowrap;\n}\n.causes__item-content {\n  margin-left: 1.875rem;\n}\n.causes__item {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.causes__item-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0;\n}\n.causes__picture {\n  width: 13.5625rem;\n  height: 13.5625rem;\n  border-radius: 50%;\n  overflow: hidden;\n  margin: 0.625rem 0;\n}\n.causes__title {\n  color: var(--gray-color-4);\n  margin: 0.625rem 0;\n  text-shadow: 0.125rem 0.125rem var(--white-color);\n}\n.causes__button {\n  font-size: 1.5rem;\n  width: 2.6875rem;\n  height: 2.6875rem;\n  border-radius: 50%;\n  color: var(--white-color);\n  background-color: var(--gray-color-1);\n  border: solid 0.1875rem var(--body-background);\n  position: absolute;\n  bottom: 0;\n  z-index: 1;\n}\n.causes__button--active {\n  background-color: var(--primary-color);\n}\n.causes__button:hover {\n  background-color: var(--primary-color);\n}\n.causes__paragraph {\n  color: var(--gray-color-4);\n  margin: 0.625rem 0;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/modules/home/components/causes/causes.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/modules/home/components/causes/causes.component.ts ***!
  \********************************************************************/
/*! exports provided: CausesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CausesComponent", function() { return CausesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let CausesComponent = class CausesComponent {
    constructor() {
        this.causes = [
            {
                img: 'https://cdn.pixabay.com/photo/2015/08/05/13/55/children-876543_1280.jpg',
                title: 'Main Causes',
                paragraph: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n' +
                    '            tincidunt eleifend dapibus. Vestibulum\n' +
                    '            adipiscing ut nibh et fermentum.',
            },
            {
                img: 'https://cdn.pixabay.com/photo/2015/03/04/13/43/old-man-658798_1280.jpg',
                title: 'Main Causes',
                paragraph: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n' +
                    '            tincidunt eleifend dapibus. Vestibulum\n' +
                    '            adipiscing ut nibh et fermentum.',
            },
            {
                img: 'https://cdn.pixabay.com/photo/2017/11/06/15/30/elephant-2923917__480.jpg',
                title: 'Main Causes',
                paragraph: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\n' +
                    '            tincidunt eleifend dapibus. Vestibulum\n' +
                    '            adipiscing ut nibh et fermentum.',
            }
        ];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
], CausesComponent.prototype, "causes", void 0);
CausesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-causes',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./causes.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/causes/causes.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./causes.component.scss */ "./src/app/modules/home/components/causes/causes.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], CausesComponent);



/***/ }),

/***/ "./src/app/modules/home/components/events/events.component.scss":
/*!**********************************************************************!*\
  !*** ./src/app/modules/home/components/events/events.component.scss ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,600,700,800&display=swap\");\n.container-fluid,\n.container {\n  margin-right: auto;\n  margin-left: auto;\n}\n.container-fluid {\n  padding-right: 2rem;\n  padding-left: 2rem;\n}\n.row {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-right: -0.5rem;\n  margin-left: -0.5rem;\n}\n.row.reverse {\n  flex-direction: row-reverse;\n}\n.col.reverse {\n  flex-direction: column-reverse;\n}\n.col-xs,\n.col-xs-1,\n.col-xs-2,\n.col-xs-3,\n.col-xs-4,\n.col-xs-5,\n.col-xs-6,\n.col-xs-7,\n.col-xs-8,\n.col-xs-9,\n.col-xs-10,\n.col-xs-11,\n.col-xs-12,\n.col-xs-offset-0,\n.col-xs-offset-1,\n.col-xs-offset-2,\n.col-xs-offset-3,\n.col-xs-offset-4,\n.col-xs-offset-5,\n.col-xs-offset-6,\n.col-xs-offset-7,\n.col-xs-offset-8,\n.col-xs-offset-9,\n.col-xs-offset-10,\n.col-xs-offset-11,\n.col-xs-offset-12 {\n  box-sizing: border-box;\n  flex: 0 0 auto;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.col-xs {\n  flex-grow: 1;\n  flex-basis: 0;\n  max-width: 100%;\n}\n.col-xs-1 {\n  flex-basis: 8.33333333%;\n  max-width: 8.33333333%;\n}\n.col-xs-2 {\n  flex-basis: 16.66666667%;\n  max-width: 16.66666667%;\n}\n.col-xs-3 {\n  flex-basis: 25%;\n  max-width: 25%;\n}\n.col-xs-4 {\n  flex-basis: 33.33333333%;\n  max-width: 33.33333333%;\n}\n.col-xs-5 {\n  flex-basis: 41.66666667%;\n  max-width: 41.66666667%;\n}\n.col-xs-6 {\n  flex-basis: 50%;\n  max-width: 50%;\n}\n.col-xs-7 {\n  flex-basis: 58.33333333%;\n  max-width: 58.33333333%;\n}\n.col-xs-8 {\n  flex-basis: 66.66666667%;\n  max-width: 66.66666667%;\n}\n.col-xs-9 {\n  flex-basis: 75%;\n  max-width: 75%;\n}\n.col-xs-10 {\n  flex-basis: 83.33333333%;\n  max-width: 83.33333333%;\n}\n.col-xs-11 {\n  flex-basis: 91.66666667%;\n  max-width: 91.66666667%;\n}\n.col-xs-12 {\n  flex-basis: 100%;\n  max-width: 100%;\n}\n.col-xs-offset-0 {\n  margin-left: 0;\n}\n.col-xs-offset-1 {\n  margin-left: 8.33333333%;\n}\n.col-xs-offset-2 {\n  margin-left: 16.66666667%;\n}\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n.col-xs-offset-4 {\n  margin-left: 33.33333333%;\n}\n.col-xs-offset-5 {\n  margin-left: 41.66666667%;\n}\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n.col-xs-offset-7 {\n  margin-left: 58.33333333%;\n}\n.col-xs-offset-8 {\n  margin-left: 66.66666667%;\n}\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n.col-xs-offset-10 {\n  margin-left: 83.33333333%;\n}\n.col-xs-offset-11 {\n  margin-left: 91.66666667%;\n}\n.start-xs {\n  justify-content: flex-start;\n  text-align: start;\n}\n.center-xs {\n  justify-content: center;\n  text-align: center;\n}\n.end-xs {\n  justify-content: flex-end;\n  text-align: end;\n}\n.top-xs {\n  align-items: flex-start;\n}\n.middle-xs {\n  align-items: center;\n}\n.bottom-xs {\n  align-items: flex-end;\n}\n.around-xs {\n  justify-content: space-around;\n}\n.between-xs {\n  justify-content: space-between;\n}\n.first-xs {\n  order: -1;\n}\n.last-xs {\n  order: 1;\n}\n@media only screen and (min-width: 48em) {\n  .container {\n    width: 49rem;\n  }\n\n  .col-sm,\n.col-sm-1,\n.col-sm-2,\n.col-sm-3,\n.col-sm-4,\n.col-sm-5,\n.col-sm-6,\n.col-sm-7,\n.col-sm-8,\n.col-sm-9,\n.col-sm-10,\n.col-sm-11,\n.col-sm-12,\n.col-sm-offset-0,\n.col-sm-offset-1,\n.col-sm-offset-2,\n.col-sm-offset-3,\n.col-sm-offset-4,\n.col-sm-offset-5,\n.col-sm-offset-6,\n.col-sm-offset-7,\n.col-sm-offset-8,\n.col-sm-offset-9,\n.col-sm-offset-10,\n.col-sm-offset-11,\n.col-sm-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-sm {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-sm-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-sm-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-sm-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-sm-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-sm-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-sm-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-sm-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-sm-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-sm-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-sm-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-sm-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-sm-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-sm-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-sm-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-sm-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-sm-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-sm-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-sm-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-sm-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-sm-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-sm-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-sm {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-sm {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-sm {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-sm {\n    align-items: flex-start;\n  }\n\n  .middle-sm {\n    align-items: center;\n  }\n\n  .bottom-sm {\n    align-items: flex-end;\n  }\n\n  .around-sm {\n    justify-content: space-around;\n  }\n\n  .between-sm {\n    justify-content: space-between;\n  }\n\n  .first-sm {\n    order: -1;\n  }\n\n  .last-sm {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 64em) {\n  .container {\n    width: 65rem;\n  }\n\n  .col-md,\n.col-md-1,\n.col-md-2,\n.col-md-3,\n.col-md-4,\n.col-md-5,\n.col-md-6,\n.col-md-7,\n.col-md-8,\n.col-md-9,\n.col-md-10,\n.col-md-11,\n.col-md-12,\n.col-md-offset-0,\n.col-md-offset-1,\n.col-md-offset-2,\n.col-md-offset-3,\n.col-md-offset-4,\n.col-md-offset-5,\n.col-md-offset-6,\n.col-md-offset-7,\n.col-md-offset-8,\n.col-md-offset-9,\n.col-md-offset-10,\n.col-md-offset-11,\n.col-md-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-md {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-md-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-md-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-md-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-md-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-md-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-md-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-md-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-md-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-md-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-md-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-md-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-md-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-md-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-md-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-md-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-md-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-md-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-md-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-md-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-md-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-md-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-md {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-md {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-md {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-md {\n    align-items: flex-start;\n  }\n\n  .middle-md {\n    align-items: center;\n  }\n\n  .bottom-md {\n    align-items: flex-end;\n  }\n\n  .around-md {\n    justify-content: space-around;\n  }\n\n  .between-md {\n    justify-content: space-between;\n  }\n\n  .first-md {\n    order: -1;\n  }\n\n  .last-md {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 75em) {\n  .container {\n    width: 76rem;\n  }\n\n  .col-lg,\n.col-lg-1,\n.col-lg-2,\n.col-lg-3,\n.col-lg-4,\n.col-lg-5,\n.col-lg-6,\n.col-lg-7,\n.col-lg-8,\n.col-lg-9,\n.col-lg-10,\n.col-lg-11,\n.col-lg-12,\n.col-lg-offset-0,\n.col-lg-offset-1,\n.col-lg-offset-2,\n.col-lg-offset-3,\n.col-lg-offset-4,\n.col-lg-offset-5,\n.col-lg-offset-6,\n.col-lg-offset-7,\n.col-lg-offset-8,\n.col-lg-offset-9,\n.col-lg-offset-10,\n.col-lg-offset-11,\n.col-lg-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-lg {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-lg-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-lg-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-lg-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-lg-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-lg-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-lg-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-lg-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-lg-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-lg-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-lg-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-lg-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-lg-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-lg-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-lg-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-lg-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-lg-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-lg-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-lg-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-lg-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-lg-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-lg-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-lg {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-lg {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-lg {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-lg {\n    align-items: flex-start;\n  }\n\n  .middle-lg {\n    align-items: center;\n  }\n\n  .bottom-lg {\n    align-items: flex-end;\n  }\n\n  .around-lg {\n    justify-content: space-around;\n  }\n\n  .between-lg {\n    justify-content: space-between;\n  }\n\n  .first-lg {\n    order: -1;\n  }\n\n  .last-lg {\n    order: 1;\n  }\n}\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n:root {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --font-color-custom-black: #000000;\n  --pink-color-2: #ebb8b8;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --border-causes-color: #dfdfe1;\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #f9f9f9;\n  --border-input-color: #ebebeb;\n  --white-color: #ffffff;\n  --body-background: #ffffff;\n  --body-background-contrast: #ffffff;\n  --gray-color-0: #fbfbfb;\n  --gray-color-1: #f0f0f0;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #666666;\n  --gray-color-5: #444444;\n  --gray-color-6: #393939;\n  --gray-color-7: #323232;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\n.dark-mode {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --pink-color-2: #ebb8b8;\n  --font-color-custom-black: #bbbbbb;\n  --border-causes-color: #393939;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #393939;\n  --border-input-color: #ebebeb;\n  --body-background: #1c1c1e;\n  --body-background-contrast: #1c1c1e;\n  --white-color: #ffffff;\n  --gray-color-0: #393939;\n  --gray-color-1: #2a2a2a;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #bbbbbb;\n  --gray-color-5: #bbbbbb;\n  --gray-color-6: #393939;\n  --gray-color-7: #bbbbbb;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\nbody {\n  background-color: var(--body-background);\n  transition: 0.25s;\n}\n* {\n  font-family: \"Open Sans\", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n}\na {\n  text-decoration: none;\n}\nli {\n  list-style-type: none;\n}\nul {\n  margin: 0;\n  padding: 0;\n}\nbutton {\n  border: none;\n  padding: 0;\n  background: transparent;\n}\nbutton:hover {\n  cursor: pointer;\n}\nbutton:focus, a:focus, input:focus, textarea:focus {\n  outline: none;\n  -webkit-filter: brightness(0.8);\n          filter: brightness(0.8);\n}\ninput, textarea {\n  border: solid 0.0625rem var(--border-input-color);\n  background: var(--background-input-color);\n  min-height: 1.875rem;\n  color: var(--font-color-header);\n}\n.break {\n  flex-basis: 100%;\n  height: 0;\n}\n.basic-slider__list::-webkit-scrollbar, .gallery__list::-webkit-scrollbar {\n  display: none;\n}\n.small-font-label {\n  font-weight: 600;\n  font-size: 0.75rem;\n}\n.label, label {\n  color: var(--gray-color-4);\n  font-size: 0.875rem;\n  font-weight: 600;\n}\n.icon {\n  width: 1.875rem;\n  height: 1.875rem;\n}\n.heading-1 {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n.heading-2 {\n  font-weight: 600;\n  font-size: 1.625rem;\n}\n.heading-3, .feed__title, .subtitle-line-below__button {\n  font-weight: 600;\n  font-size: 1rem;\n  line-height: 1.3rem;\n}\n.heading-4, .subtitle-line-below__text {\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.3rem;\n}\n.heading-5 {\n  font-weight: 700;\n  font-size: 1rem;\n  color: var(--gray-color-4);\n  text-transform: uppercase;\n  height: auto;\n}\n.block-scroll {\n  overflow: hidden !important;\n  height: 100vh !important;\n}\n.cover {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n     object-fit: cover;\n  -o-object-position: 50% 50%;\n     object-position: 50% 50%;\n}\nfigure {\n  background: var(--gray-color-2);\n}\n.paragraph, .paragraph-light, .feed__paragraph {\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n}\n.paragraph-light, .feed__paragraph {\n  font-weight: 300;\n}\n.simple-button {\n  border: none;\n  color: var(--white-color);\n  background-color: var(--gray-color-9);\n  font-weight: 700;\n  font-size: 0.875rem;\n}\n/*========================== Subtitles with line below ==========================*/\n.subtitle-line-below {\n  margin-bottom: 2.8125rem;\n}\n.subtitle-line-below__list {\n  display: flex;\n}\n.feed .subtitle-line-below__item:nth-last-of-type(1) {\n  flex: 1;\n}\n.subtitle-line-below__item:nth-last-of-type(1) > .subtitle-line-below__button {\n  margin-left: 0.125rem;\n  padding: 0 0.25rem;\n}\n.subtitle-line-below__button {\n  font-size: 1.5rem;\n  width: 100%;\n  color: var(--gray-color-7);\n}\n.subtitle-line-below__button, .subtitle-line-below__text {\n  position: relative;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n}\n.subtitle-line-below__button:before, .subtitle-line-below__text:before {\n  content: \"\";\n  width: 100%;\n  height: 0.4375rem;\n  background: var(--primary-light-color);\n  position: absolute;\n  top: 2.2rem;\n  left: 0;\n}\n.subtitle-line-below__button:hover:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__button--active:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__text:before {\n  background-color: var(--primary-color);\n  width: 110%;\n  height: 0.25rem;\n}\n.subtitle-line-below__text {\n  text-transform: uppercase;\n  color: var(--white-color);\n}\n/*========================== Feed Section - Gallery, Events, News ==========================*/\n.feed__item {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2.8125rem;\n}\n.feed__image {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n.feed__content {\n  flex: 1;\n}\n.feed__title {\n  margin-bottom: 0.625rem;\n  color: var(--font-color-custom-black);\n}\n.feed__paragraph {\n  color: var(--gray-color-4);\n}\n.events {\n  padding-top: 3.125rem;\n}\n.events .feed__content {\n  margin-left: 0.875rem;\n}\n.events .feed__image {\n  height: 11.5625rem;\n}\n.events__row .feed__item:first-of-type .feed__image {\n  height: 17.8125rem;\n}\n/*========================== Calendar component ==========================*/\n.calendar {\n  width: 5rem;\n  height: 5rem;\n  background-color: var(--gray-color-0);\n  border: solid 0.0588235294rem var(--gray-color-1);\n  font-weight: 700;\n  font-size: 1rem;\n  display: flex;\n  text-transform: uppercase;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  position: relative;\n}\n.calendar:before {\n  content: \"\";\n  width: 100%;\n  height: 0.5625rem;\n  background-color: var(--primary-color);\n  position: absolute;\n  border: 0.0625rem solid var(--primary-color);\n  top: -0.0625rem;\n}\n.calendar::after {\n  content: \"\";\n  width: 1.1875rem;\n  height: 0.0625rem;\n  position: absolute;\n  margin: auto;\n  top: 0.25rem;\n  background-color: var(--white-color);\n}\n.calendar__date {\n  color: var(--gray-color-5);\n  line-height: 1.5rem;\n  padding-top: 0.5625rem;\n}\n.calendar__date > span {\n  color: var(--aqua-color);\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/modules/home/components/events/events.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/modules/home/components/events/events.component.ts ***!
  \********************************************************************/
/*! exports provided: EventsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventsComponent", function() { return EventsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let EventsComponent = class EventsComponent {
    constructor() {
        this.events = [
            {
                img: 'https://cdn.pixabay.com/photo/2014/04/02/14/48/children-306607_1280.jpg',
                title: 'Contrary to popular belief, Lorem Ipsum is not simply random',
                paragraph: 'Aliquam erat volutpat. Aenean sagittis dui vestibulum quam\n' +
                    '            accumsan viverra. Mauris velit dolor, posuere non tempor eu.',
                month: 'Jun',
                day: 20,
            },
            {
                img: 'https://cdn.pixabay.com/photo/2016/01/03/10/11/indian-1119255_1280.jpg',
                title: 'Contrary to popular belief, Lorem Ipsum is not simply random',
                paragraph: 'Aliquam erat volutpat. Aenean sagittis dui vestibulum quam\n' +
                    '            accumsan viverra. Mauris velit dolor, posuere non tempor eu.',
                month: 'Jun',
                day: 17,
            },
            {
                img: 'https://cdn.pixabay.com/photo/2016/10/05/17/26/indian-1717192_1280.jpg',
                title: 'Contrary to popular belief, Lorem Ipsum is not simply random',
                paragraph: 'Aliquam erat volutpat. Aenean sagittis dui vestibulum quam\n' +
                    '            accumsan viverra. Mauris velit dolor, posuere non tempor eu.',
                month: 'Jun',
                day: 14,
            }
        ];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
], EventsComponent.prototype, "events", void 0);
EventsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-events',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./events.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/events/events.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./events.component.scss */ "./src/app/modules/home/components/events/events.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], EventsComponent);



/***/ }),

/***/ "./src/app/modules/home/components/gallery/gallery.component.scss":
/*!************************************************************************!*\
  !*** ./src/app/modules/home/components/gallery/gallery.component.scss ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,600,700,800&display=swap\");\n.container-fluid,\n.container {\n  margin-right: auto;\n  margin-left: auto;\n}\n.container-fluid {\n  padding-right: 2rem;\n  padding-left: 2rem;\n}\n.row {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-right: -0.5rem;\n  margin-left: -0.5rem;\n}\n.row.reverse {\n  flex-direction: row-reverse;\n}\n.col.reverse {\n  flex-direction: column-reverse;\n}\n.col-xs,\n.col-xs-1,\n.col-xs-2,\n.col-xs-3,\n.col-xs-4,\n.col-xs-5,\n.col-xs-6,\n.col-xs-7,\n.col-xs-8,\n.col-xs-9,\n.col-xs-10,\n.col-xs-11,\n.col-xs-12,\n.col-xs-offset-0,\n.col-xs-offset-1,\n.col-xs-offset-2,\n.col-xs-offset-3,\n.col-xs-offset-4,\n.col-xs-offset-5,\n.col-xs-offset-6,\n.col-xs-offset-7,\n.col-xs-offset-8,\n.col-xs-offset-9,\n.col-xs-offset-10,\n.col-xs-offset-11,\n.col-xs-offset-12 {\n  box-sizing: border-box;\n  flex: 0 0 auto;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.col-xs {\n  flex-grow: 1;\n  flex-basis: 0;\n  max-width: 100%;\n}\n.col-xs-1 {\n  flex-basis: 8.33333333%;\n  max-width: 8.33333333%;\n}\n.col-xs-2 {\n  flex-basis: 16.66666667%;\n  max-width: 16.66666667%;\n}\n.col-xs-3 {\n  flex-basis: 25%;\n  max-width: 25%;\n}\n.col-xs-4 {\n  flex-basis: 33.33333333%;\n  max-width: 33.33333333%;\n}\n.col-xs-5 {\n  flex-basis: 41.66666667%;\n  max-width: 41.66666667%;\n}\n.col-xs-6 {\n  flex-basis: 50%;\n  max-width: 50%;\n}\n.col-xs-7 {\n  flex-basis: 58.33333333%;\n  max-width: 58.33333333%;\n}\n.col-xs-8 {\n  flex-basis: 66.66666667%;\n  max-width: 66.66666667%;\n}\n.col-xs-9 {\n  flex-basis: 75%;\n  max-width: 75%;\n}\n.col-xs-10 {\n  flex-basis: 83.33333333%;\n  max-width: 83.33333333%;\n}\n.col-xs-11 {\n  flex-basis: 91.66666667%;\n  max-width: 91.66666667%;\n}\n.col-xs-12 {\n  flex-basis: 100%;\n  max-width: 100%;\n}\n.col-xs-offset-0 {\n  margin-left: 0;\n}\n.col-xs-offset-1 {\n  margin-left: 8.33333333%;\n}\n.col-xs-offset-2 {\n  margin-left: 16.66666667%;\n}\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n.col-xs-offset-4 {\n  margin-left: 33.33333333%;\n}\n.col-xs-offset-5 {\n  margin-left: 41.66666667%;\n}\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n.col-xs-offset-7 {\n  margin-left: 58.33333333%;\n}\n.col-xs-offset-8 {\n  margin-left: 66.66666667%;\n}\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n.col-xs-offset-10 {\n  margin-left: 83.33333333%;\n}\n.col-xs-offset-11 {\n  margin-left: 91.66666667%;\n}\n.start-xs {\n  justify-content: flex-start;\n  text-align: start;\n}\n.center-xs {\n  justify-content: center;\n  text-align: center;\n}\n.end-xs {\n  justify-content: flex-end;\n  text-align: end;\n}\n.top-xs {\n  align-items: flex-start;\n}\n.middle-xs {\n  align-items: center;\n}\n.bottom-xs {\n  align-items: flex-end;\n}\n.around-xs {\n  justify-content: space-around;\n}\n.between-xs {\n  justify-content: space-between;\n}\n.first-xs {\n  order: -1;\n}\n.last-xs {\n  order: 1;\n}\n@media only screen and (min-width: 48em) {\n  .container {\n    width: 49rem;\n  }\n\n  .col-sm,\n.col-sm-1,\n.col-sm-2,\n.col-sm-3,\n.col-sm-4,\n.col-sm-5,\n.col-sm-6,\n.col-sm-7,\n.col-sm-8,\n.col-sm-9,\n.col-sm-10,\n.col-sm-11,\n.col-sm-12,\n.col-sm-offset-0,\n.col-sm-offset-1,\n.col-sm-offset-2,\n.col-sm-offset-3,\n.col-sm-offset-4,\n.col-sm-offset-5,\n.col-sm-offset-6,\n.col-sm-offset-7,\n.col-sm-offset-8,\n.col-sm-offset-9,\n.col-sm-offset-10,\n.col-sm-offset-11,\n.col-sm-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-sm {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-sm-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-sm-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-sm-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-sm-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-sm-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-sm-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-sm-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-sm-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-sm-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-sm-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-sm-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-sm-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-sm-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-sm-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-sm-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-sm-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-sm-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-sm-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-sm-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-sm-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-sm-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-sm {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-sm {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-sm {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-sm {\n    align-items: flex-start;\n  }\n\n  .middle-sm {\n    align-items: center;\n  }\n\n  .bottom-sm {\n    align-items: flex-end;\n  }\n\n  .around-sm {\n    justify-content: space-around;\n  }\n\n  .between-sm {\n    justify-content: space-between;\n  }\n\n  .first-sm {\n    order: -1;\n  }\n\n  .last-sm {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 64em) {\n  .container {\n    width: 65rem;\n  }\n\n  .col-md,\n.col-md-1,\n.col-md-2,\n.col-md-3,\n.col-md-4,\n.col-md-5,\n.col-md-6,\n.col-md-7,\n.col-md-8,\n.col-md-9,\n.col-md-10,\n.col-md-11,\n.col-md-12,\n.col-md-offset-0,\n.col-md-offset-1,\n.col-md-offset-2,\n.col-md-offset-3,\n.col-md-offset-4,\n.col-md-offset-5,\n.col-md-offset-6,\n.col-md-offset-7,\n.col-md-offset-8,\n.col-md-offset-9,\n.col-md-offset-10,\n.col-md-offset-11,\n.col-md-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-md {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-md-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-md-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-md-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-md-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-md-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-md-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-md-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-md-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-md-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-md-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-md-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-md-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-md-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-md-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-md-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-md-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-md-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-md-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-md-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-md-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-md-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-md {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-md {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-md {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-md {\n    align-items: flex-start;\n  }\n\n  .middle-md {\n    align-items: center;\n  }\n\n  .bottom-md {\n    align-items: flex-end;\n  }\n\n  .around-md {\n    justify-content: space-around;\n  }\n\n  .between-md {\n    justify-content: space-between;\n  }\n\n  .first-md {\n    order: -1;\n  }\n\n  .last-md {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 75em) {\n  .container {\n    width: 76rem;\n  }\n\n  .col-lg,\n.col-lg-1,\n.col-lg-2,\n.col-lg-3,\n.col-lg-4,\n.col-lg-5,\n.col-lg-6,\n.col-lg-7,\n.col-lg-8,\n.col-lg-9,\n.col-lg-10,\n.col-lg-11,\n.col-lg-12,\n.col-lg-offset-0,\n.col-lg-offset-1,\n.col-lg-offset-2,\n.col-lg-offset-3,\n.col-lg-offset-4,\n.col-lg-offset-5,\n.col-lg-offset-6,\n.col-lg-offset-7,\n.col-lg-offset-8,\n.col-lg-offset-9,\n.col-lg-offset-10,\n.col-lg-offset-11,\n.col-lg-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-lg {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-lg-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-lg-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-lg-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-lg-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-lg-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-lg-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-lg-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-lg-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-lg-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-lg-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-lg-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-lg-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-lg-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-lg-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-lg-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-lg-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-lg-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-lg-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-lg-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-lg-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-lg-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-lg {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-lg {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-lg {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-lg {\n    align-items: flex-start;\n  }\n\n  .middle-lg {\n    align-items: center;\n  }\n\n  .bottom-lg {\n    align-items: flex-end;\n  }\n\n  .around-lg {\n    justify-content: space-around;\n  }\n\n  .between-lg {\n    justify-content: space-between;\n  }\n\n  .first-lg {\n    order: -1;\n  }\n\n  .last-lg {\n    order: 1;\n  }\n}\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n:root {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --font-color-custom-black: #000000;\n  --pink-color-2: #ebb8b8;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --border-causes-color: #dfdfe1;\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #f9f9f9;\n  --border-input-color: #ebebeb;\n  --white-color: #ffffff;\n  --body-background: #ffffff;\n  --body-background-contrast: #ffffff;\n  --gray-color-0: #fbfbfb;\n  --gray-color-1: #f0f0f0;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #666666;\n  --gray-color-5: #444444;\n  --gray-color-6: #393939;\n  --gray-color-7: #323232;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\n.dark-mode {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --pink-color-2: #ebb8b8;\n  --font-color-custom-black: #bbbbbb;\n  --border-causes-color: #393939;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #393939;\n  --border-input-color: #ebebeb;\n  --body-background: #1c1c1e;\n  --body-background-contrast: #1c1c1e;\n  --white-color: #ffffff;\n  --gray-color-0: #393939;\n  --gray-color-1: #2a2a2a;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #bbbbbb;\n  --gray-color-5: #bbbbbb;\n  --gray-color-6: #393939;\n  --gray-color-7: #bbbbbb;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\nbody {\n  background-color: var(--body-background);\n  transition: 0.25s;\n}\n* {\n  font-family: \"Open Sans\", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n}\na {\n  text-decoration: none;\n}\nli {\n  list-style-type: none;\n}\nul {\n  margin: 0;\n  padding: 0;\n}\nbutton {\n  border: none;\n  padding: 0;\n  background: transparent;\n}\nbutton:hover {\n  cursor: pointer;\n}\nbutton:focus, a:focus, input:focus, textarea:focus {\n  outline: none;\n  -webkit-filter: brightness(0.8);\n          filter: brightness(0.8);\n}\ninput, textarea {\n  border: solid 0.0625rem var(--border-input-color);\n  background: var(--background-input-color);\n  min-height: 1.875rem;\n  color: var(--font-color-header);\n}\n.break {\n  flex-basis: 100%;\n  height: 0;\n}\n.basic-slider__list::-webkit-scrollbar, .gallery__list::-webkit-scrollbar {\n  display: none;\n}\n.small-font-label {\n  font-weight: 600;\n  font-size: 0.75rem;\n}\n.label, label {\n  color: var(--gray-color-4);\n  font-size: 0.875rem;\n  font-weight: 600;\n}\n.icon {\n  width: 1.875rem;\n  height: 1.875rem;\n}\n.heading-1 {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n.heading-2 {\n  font-weight: 600;\n  font-size: 1.625rem;\n}\n.heading-3, .feed__title, .subtitle-line-below__button {\n  font-weight: 600;\n  font-size: 1rem;\n  line-height: 1.3rem;\n}\n.heading-4, .subtitle-line-below__text {\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.3rem;\n}\n.heading-5 {\n  font-weight: 700;\n  font-size: 1rem;\n  color: var(--gray-color-4);\n  text-transform: uppercase;\n  height: auto;\n}\n.block-scroll {\n  overflow: hidden !important;\n  height: 100vh !important;\n}\n.cover {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n     object-fit: cover;\n  -o-object-position: 50% 50%;\n     object-position: 50% 50%;\n}\nfigure {\n  background: var(--gray-color-2);\n}\n.paragraph, .paragraph-light, .feed__paragraph {\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n}\n.paragraph-light, .feed__paragraph {\n  font-weight: 300;\n}\n.simple-button {\n  border: none;\n  color: var(--white-color);\n  background-color: var(--gray-color-9);\n  font-weight: 700;\n  font-size: 0.875rem;\n}\n/*========================== Subtitles with line below ==========================*/\n.subtitle-line-below {\n  margin-bottom: 2.8125rem;\n}\n.subtitle-line-below__list {\n  display: flex;\n}\n.feed .subtitle-line-below__item:nth-last-of-type(1) {\n  flex: 1;\n}\n.subtitle-line-below__item:nth-last-of-type(1) > .subtitle-line-below__button {\n  margin-left: 0.125rem;\n  padding: 0 0.25rem;\n}\n.subtitle-line-below__button {\n  font-size: 1.5rem;\n  width: 100%;\n  color: var(--gray-color-7);\n}\n.subtitle-line-below__button, .subtitle-line-below__text {\n  position: relative;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n}\n.subtitle-line-below__button:before, .subtitle-line-below__text:before {\n  content: \"\";\n  width: 100%;\n  height: 0.4375rem;\n  background: var(--primary-light-color);\n  position: absolute;\n  top: 2.2rem;\n  left: 0;\n}\n.subtitle-line-below__button:hover:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__button--active:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__text:before {\n  background-color: var(--primary-color);\n  width: 110%;\n  height: 0.25rem;\n}\n.subtitle-line-below__text {\n  text-transform: uppercase;\n  color: var(--white-color);\n}\n/*========================== Feed Section - Gallery, Events, News ==========================*/\n.feed__item {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2.8125rem;\n}\n.feed__image {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n.feed__content {\n  flex: 1;\n}\n.feed__title {\n  margin-bottom: 0.625rem;\n  color: var(--font-color-custom-black);\n}\n.feed__paragraph {\n  color: var(--gray-color-4);\n}\n/*========================== basic-slider ==========================*/\n.gallery {\n  padding-top: 6.25rem;\n  margin-bottom: 3.125rem;\n}\n.gallery .feed__image {\n  height: 16.25rem;\n  margin: 0;\n}\n.gallery .basic-slider__list {\n  padding: 0;\n}\n.basic-slider__list {\n  display: flex;\n  overflow-x: auto;\n  overflow-y: hidden;\n  flex-wrap: nowrap;\n}\n.basic-slider__item {\n  position: relative;\n}\n.basic-slider__button:hover {\n  opacity: 1;\n}\n.basic-slider__button {\n  height: 100%;\n  width: calc(100% - 1rem);\n  background: var(--primary-light-color);\n  position: absolute;\n  font-size: 3.625rem;\n  color: var(--white-color);\n  font-weight: 400;\n  opacity: 0;\n  transition: 0.25s;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/modules/home/components/gallery/gallery.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/modules/home/components/gallery/gallery.component.ts ***!
  \**********************************************************************/
/*! exports provided: GalleryComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GalleryComponent", function() { return GalleryComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let GalleryComponent = class GalleryComponent {
    constructor() {
        this.gallery = [
            {
                img: 'https://cdn.pixabay.com/photo/2013/02/16/16/00/children-82272_1280.jpg',
            },
            {
                img: 'https://cdn.pixabay.com/photo/2016/01/03/09/33/indian-1119222_1280.jpg',
            },
            {
                img: 'https://cdn.pixabay.com/photo/2017/06/16/10/25/lady-2408609_1280.jpg',
            }
        ];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
], GalleryComponent.prototype, "gallery", void 0);
GalleryComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-gallery',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./gallery.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/gallery/gallery.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./gallery.component.scss */ "./src/app/modules/home/components/gallery/gallery.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], GalleryComponent);



/***/ }),

/***/ "./src/app/modules/home/components/news/news.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/modules/home/components/news/news.component.scss ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,600,700,800&display=swap\");\n.container-fluid,\n.container {\n  margin-right: auto;\n  margin-left: auto;\n}\n.container-fluid {\n  padding-right: 2rem;\n  padding-left: 2rem;\n}\n.row {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-right: -0.5rem;\n  margin-left: -0.5rem;\n}\n.row.reverse {\n  flex-direction: row-reverse;\n}\n.col.reverse {\n  flex-direction: column-reverse;\n}\n.col-xs,\n.col-xs-1,\n.col-xs-2,\n.col-xs-3,\n.col-xs-4,\n.col-xs-5,\n.col-xs-6,\n.col-xs-7,\n.col-xs-8,\n.col-xs-9,\n.col-xs-10,\n.col-xs-11,\n.col-xs-12,\n.col-xs-offset-0,\n.col-xs-offset-1,\n.col-xs-offset-2,\n.col-xs-offset-3,\n.col-xs-offset-4,\n.col-xs-offset-5,\n.col-xs-offset-6,\n.col-xs-offset-7,\n.col-xs-offset-8,\n.col-xs-offset-9,\n.col-xs-offset-10,\n.col-xs-offset-11,\n.col-xs-offset-12 {\n  box-sizing: border-box;\n  flex: 0 0 auto;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.col-xs {\n  flex-grow: 1;\n  flex-basis: 0;\n  max-width: 100%;\n}\n.col-xs-1 {\n  flex-basis: 8.33333333%;\n  max-width: 8.33333333%;\n}\n.col-xs-2 {\n  flex-basis: 16.66666667%;\n  max-width: 16.66666667%;\n}\n.col-xs-3 {\n  flex-basis: 25%;\n  max-width: 25%;\n}\n.col-xs-4 {\n  flex-basis: 33.33333333%;\n  max-width: 33.33333333%;\n}\n.col-xs-5 {\n  flex-basis: 41.66666667%;\n  max-width: 41.66666667%;\n}\n.col-xs-6 {\n  flex-basis: 50%;\n  max-width: 50%;\n}\n.col-xs-7 {\n  flex-basis: 58.33333333%;\n  max-width: 58.33333333%;\n}\n.col-xs-8 {\n  flex-basis: 66.66666667%;\n  max-width: 66.66666667%;\n}\n.col-xs-9 {\n  flex-basis: 75%;\n  max-width: 75%;\n}\n.col-xs-10 {\n  flex-basis: 83.33333333%;\n  max-width: 83.33333333%;\n}\n.col-xs-11 {\n  flex-basis: 91.66666667%;\n  max-width: 91.66666667%;\n}\n.col-xs-12 {\n  flex-basis: 100%;\n  max-width: 100%;\n}\n.col-xs-offset-0 {\n  margin-left: 0;\n}\n.col-xs-offset-1 {\n  margin-left: 8.33333333%;\n}\n.col-xs-offset-2 {\n  margin-left: 16.66666667%;\n}\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n.col-xs-offset-4 {\n  margin-left: 33.33333333%;\n}\n.col-xs-offset-5 {\n  margin-left: 41.66666667%;\n}\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n.col-xs-offset-7 {\n  margin-left: 58.33333333%;\n}\n.col-xs-offset-8 {\n  margin-left: 66.66666667%;\n}\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n.col-xs-offset-10 {\n  margin-left: 83.33333333%;\n}\n.col-xs-offset-11 {\n  margin-left: 91.66666667%;\n}\n.start-xs {\n  justify-content: flex-start;\n  text-align: start;\n}\n.center-xs {\n  justify-content: center;\n  text-align: center;\n}\n.end-xs {\n  justify-content: flex-end;\n  text-align: end;\n}\n.top-xs {\n  align-items: flex-start;\n}\n.middle-xs {\n  align-items: center;\n}\n.bottom-xs {\n  align-items: flex-end;\n}\n.around-xs {\n  justify-content: space-around;\n}\n.between-xs {\n  justify-content: space-between;\n}\n.first-xs {\n  order: -1;\n}\n.last-xs {\n  order: 1;\n}\n@media only screen and (min-width: 48em) {\n  .container {\n    width: 49rem;\n  }\n\n  .col-sm,\n.col-sm-1,\n.col-sm-2,\n.col-sm-3,\n.col-sm-4,\n.col-sm-5,\n.col-sm-6,\n.col-sm-7,\n.col-sm-8,\n.col-sm-9,\n.col-sm-10,\n.col-sm-11,\n.col-sm-12,\n.col-sm-offset-0,\n.col-sm-offset-1,\n.col-sm-offset-2,\n.col-sm-offset-3,\n.col-sm-offset-4,\n.col-sm-offset-5,\n.col-sm-offset-6,\n.col-sm-offset-7,\n.col-sm-offset-8,\n.col-sm-offset-9,\n.col-sm-offset-10,\n.col-sm-offset-11,\n.col-sm-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-sm {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-sm-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-sm-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-sm-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-sm-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-sm-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-sm-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-sm-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-sm-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-sm-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-sm-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-sm-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-sm-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-sm-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-sm-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-sm-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-sm-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-sm-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-sm-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-sm-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-sm-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-sm-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-sm {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-sm {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-sm {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-sm {\n    align-items: flex-start;\n  }\n\n  .middle-sm {\n    align-items: center;\n  }\n\n  .bottom-sm {\n    align-items: flex-end;\n  }\n\n  .around-sm {\n    justify-content: space-around;\n  }\n\n  .between-sm {\n    justify-content: space-between;\n  }\n\n  .first-sm {\n    order: -1;\n  }\n\n  .last-sm {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 64em) {\n  .container {\n    width: 65rem;\n  }\n\n  .col-md,\n.col-md-1,\n.col-md-2,\n.col-md-3,\n.col-md-4,\n.col-md-5,\n.col-md-6,\n.col-md-7,\n.col-md-8,\n.col-md-9,\n.col-md-10,\n.col-md-11,\n.col-md-12,\n.col-md-offset-0,\n.col-md-offset-1,\n.col-md-offset-2,\n.col-md-offset-3,\n.col-md-offset-4,\n.col-md-offset-5,\n.col-md-offset-6,\n.col-md-offset-7,\n.col-md-offset-8,\n.col-md-offset-9,\n.col-md-offset-10,\n.col-md-offset-11,\n.col-md-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-md {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-md-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-md-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-md-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-md-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-md-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-md-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-md-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-md-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-md-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-md-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-md-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-md-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-md-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-md-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-md-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-md-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-md-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-md-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-md-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-md-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-md-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-md {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-md {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-md {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-md {\n    align-items: flex-start;\n  }\n\n  .middle-md {\n    align-items: center;\n  }\n\n  .bottom-md {\n    align-items: flex-end;\n  }\n\n  .around-md {\n    justify-content: space-around;\n  }\n\n  .between-md {\n    justify-content: space-between;\n  }\n\n  .first-md {\n    order: -1;\n  }\n\n  .last-md {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 75em) {\n  .container {\n    width: 76rem;\n  }\n\n  .col-lg,\n.col-lg-1,\n.col-lg-2,\n.col-lg-3,\n.col-lg-4,\n.col-lg-5,\n.col-lg-6,\n.col-lg-7,\n.col-lg-8,\n.col-lg-9,\n.col-lg-10,\n.col-lg-11,\n.col-lg-12,\n.col-lg-offset-0,\n.col-lg-offset-1,\n.col-lg-offset-2,\n.col-lg-offset-3,\n.col-lg-offset-4,\n.col-lg-offset-5,\n.col-lg-offset-6,\n.col-lg-offset-7,\n.col-lg-offset-8,\n.col-lg-offset-9,\n.col-lg-offset-10,\n.col-lg-offset-11,\n.col-lg-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-lg {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-lg-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-lg-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-lg-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-lg-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-lg-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-lg-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-lg-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-lg-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-lg-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-lg-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-lg-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-lg-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-lg-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-lg-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-lg-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-lg-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-lg-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-lg-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-lg-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-lg-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-lg-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-lg {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-lg {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-lg {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-lg {\n    align-items: flex-start;\n  }\n\n  .middle-lg {\n    align-items: center;\n  }\n\n  .bottom-lg {\n    align-items: flex-end;\n  }\n\n  .around-lg {\n    justify-content: space-around;\n  }\n\n  .between-lg {\n    justify-content: space-between;\n  }\n\n  .first-lg {\n    order: -1;\n  }\n\n  .last-lg {\n    order: 1;\n  }\n}\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n:root {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --font-color-custom-black: #000000;\n  --pink-color-2: #ebb8b8;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --border-causes-color: #dfdfe1;\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #f9f9f9;\n  --border-input-color: #ebebeb;\n  --white-color: #ffffff;\n  --body-background: #ffffff;\n  --body-background-contrast: #ffffff;\n  --gray-color-0: #fbfbfb;\n  --gray-color-1: #f0f0f0;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #666666;\n  --gray-color-5: #444444;\n  --gray-color-6: #393939;\n  --gray-color-7: #323232;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\n.dark-mode {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --pink-color-2: #ebb8b8;\n  --font-color-custom-black: #bbbbbb;\n  --border-causes-color: #393939;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #393939;\n  --border-input-color: #ebebeb;\n  --body-background: #1c1c1e;\n  --body-background-contrast: #1c1c1e;\n  --white-color: #ffffff;\n  --gray-color-0: #393939;\n  --gray-color-1: #2a2a2a;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #bbbbbb;\n  --gray-color-5: #bbbbbb;\n  --gray-color-6: #393939;\n  --gray-color-7: #bbbbbb;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\nbody {\n  background-color: var(--body-background);\n  transition: 0.25s;\n}\n* {\n  font-family: \"Open Sans\", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n}\na {\n  text-decoration: none;\n}\nli {\n  list-style-type: none;\n}\nul {\n  margin: 0;\n  padding: 0;\n}\nbutton {\n  border: none;\n  padding: 0;\n  background: transparent;\n}\nbutton:hover {\n  cursor: pointer;\n}\nbutton:focus, a:focus, input:focus, textarea:focus {\n  outline: none;\n  -webkit-filter: brightness(0.8);\n          filter: brightness(0.8);\n}\ninput, textarea {\n  border: solid 0.0625rem var(--border-input-color);\n  background: var(--background-input-color);\n  min-height: 1.875rem;\n  color: var(--font-color-header);\n}\n.break {\n  flex-basis: 100%;\n  height: 0;\n}\n.basic-slider__list::-webkit-scrollbar, .gallery__list::-webkit-scrollbar {\n  display: none;\n}\n.small-font-label {\n  font-weight: 600;\n  font-size: 0.75rem;\n}\n.label, label {\n  color: var(--gray-color-4);\n  font-size: 0.875rem;\n  font-weight: 600;\n}\n.icon {\n  width: 1.875rem;\n  height: 1.875rem;\n}\n.heading-1 {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n.heading-2 {\n  font-weight: 600;\n  font-size: 1.625rem;\n}\n.heading-3, .feed__title, .subtitle-line-below__button {\n  font-weight: 600;\n  font-size: 1rem;\n  line-height: 1.3rem;\n}\n.heading-4, .subtitle-line-below__text {\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.3rem;\n}\n.heading-5 {\n  font-weight: 700;\n  font-size: 1rem;\n  color: var(--gray-color-4);\n  text-transform: uppercase;\n  height: auto;\n}\n.block-scroll {\n  overflow: hidden !important;\n  height: 100vh !important;\n}\n.cover {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n     object-fit: cover;\n  -o-object-position: 50% 50%;\n     object-position: 50% 50%;\n}\nfigure {\n  background: var(--gray-color-2);\n}\n.paragraph, .calendar__date--inline-text, .paragraph-light, .feed__paragraph {\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n}\n.paragraph-light, .feed__paragraph {\n  font-weight: 300;\n}\n.simple-button {\n  border: none;\n  color: var(--white-color);\n  background-color: var(--gray-color-9);\n  font-weight: 700;\n  font-size: 0.875rem;\n}\n/*========================== Subtitles with line below ==========================*/\n.subtitle-line-below {\n  margin-bottom: 2.8125rem;\n}\n.subtitle-line-below__list {\n  display: flex;\n}\n.feed .subtitle-line-below__item:nth-last-of-type(1) {\n  flex: 1;\n}\n.subtitle-line-below__item:nth-last-of-type(1) > .subtitle-line-below__button {\n  margin-left: 0.125rem;\n  padding: 0 0.25rem;\n}\n.subtitle-line-below__button {\n  font-size: 1.5rem;\n  width: 100%;\n  color: var(--gray-color-7);\n}\n.subtitle-line-below__button, .subtitle-line-below__text {\n  position: relative;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n}\n.subtitle-line-below__button:before, .subtitle-line-below__text:before {\n  content: \"\";\n  width: 100%;\n  height: 0.4375rem;\n  background: var(--primary-light-color);\n  position: absolute;\n  top: 2.2rem;\n  left: 0;\n}\n.subtitle-line-below__button:hover:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__button--active:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__text:before {\n  background-color: var(--primary-color);\n  width: 110%;\n  height: 0.25rem;\n}\n.subtitle-line-below__text {\n  text-transform: uppercase;\n  color: var(--white-color);\n}\n/*========================== Feed Section - Gallery, Events, News ==========================*/\n.feed__item {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2.8125rem;\n}\n.feed__image {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n.feed__content {\n  flex: 1;\n}\n.feed__title {\n  margin-bottom: 0.625rem;\n  color: var(--font-color-custom-black);\n}\n.feed__paragraph {\n  color: var(--gray-color-4);\n}\n.news {\n  padding-top: 3.125rem;\n}\n.news__row .feed__item:first-of-type .feed__image {\n  width: 100%;\n  height: 10.9375rem;\n}\n.news__row .feed__item:nth-of-type(1n+2) .feed__content {\n  margin-left: 1.25rem;\n}\n.news__row .feed__item:nth-of-type(1n+2) .feed__paragraph {\n  margin-top: 0;\n}\n.news__row .feed__item:nth-of-type(1n+2) .calendar__date--inline-text {\n  line-height: 3rem;\n}\n.news .feed__image {\n  width: 6.25rem;\n  height: 5.3125rem;\n}\n.news .feed__title {\n  margin-bottom: 0.3rem;\n}\n.news .feed__paragraph {\n  margin-top: 0.5rem;\n}\n.calendar__date--inline-text {\n  font-size: 0.75rem;\n  color: var(--gray-color-4);\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/modules/home/components/news/news.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/home/components/news/news.component.ts ***!
  \****************************************************************/
/*! exports provided: NewsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewsComponent", function() { return NewsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let NewsComponent = class NewsComponent {
    constructor() {
        this.news = [
            {
                img: 'https://cdn.pixabay.com/photo/2016/01/24/12/53/indian-1158803_1280.jpg',
                title: 'Contrary to popular belief, Lorem Ipsum is not simply random',
                paragraph: 'Aliquam erat volutpat. Aenean sagittis dui vestibulum quam\n' +
                    '            accumsan viverra. Mauris velit dolor, posuere non tempor eu.',
                date: '31 Nov , 2020 | 3 comments',
            },
            {
                img: 'https://cdn.pixabay.com/photo/2016/10/08/14/51/travel-1723863_1280.jpg',
                title: 'Contrary to popular belief, Lorem Ipsum is not simply random',
                paragraph: 'Aliquam erat volutpat. Aenean sagittis dui vestibulum quam\n' +
                    '            accumsan viverra. Mauris velit dolor, posuere non tempor eu.',
                date: '31 Nov , 2020 | 3 comments',
            },
            {
                img: 'https://cdn.pixabay.com/photo/2015/10/12/15/26/woman-984537_1280.jpg',
                title: 'Contrary to popular belief, Lorem Ipsum is not simply random',
                paragraph: 'Aliquam erat volutpat. Aenean sagittis dui vestibulum quam\n' +
                    '            accumsan viverra. Mauris velit dolor, posuere non tempor eu.',
                date: '31 Nov , 2020 | 3 comments',
            }
        ];
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
], NewsComponent.prototype, "news", void 0);
NewsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-news',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./news.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/news/news.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./news.component.scss */ "./src/app/modules/home/components/news/news.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], NewsComponent);



/***/ }),

/***/ "./src/app/modules/home/components/presentation/presentation.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/modules/home/components/presentation/presentation.component.scss ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,400i,600,700,800&display=swap\");\n.container-fluid,\n.container {\n  margin-right: auto;\n  margin-left: auto;\n}\n.container-fluid {\n  padding-right: 2rem;\n  padding-left: 2rem;\n}\n.row {\n  box-sizing: border-box;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-right: -0.5rem;\n  margin-left: -0.5rem;\n}\n.row.reverse {\n  flex-direction: row-reverse;\n}\n.col.reverse {\n  flex-direction: column-reverse;\n}\n.col-xs,\n.col-xs-1,\n.col-xs-2,\n.col-xs-3,\n.col-xs-4,\n.col-xs-5,\n.col-xs-6,\n.col-xs-7,\n.col-xs-8,\n.col-xs-9,\n.col-xs-10,\n.col-xs-11,\n.col-xs-12,\n.col-xs-offset-0,\n.col-xs-offset-1,\n.col-xs-offset-2,\n.col-xs-offset-3,\n.col-xs-offset-4,\n.col-xs-offset-5,\n.col-xs-offset-6,\n.col-xs-offset-7,\n.col-xs-offset-8,\n.col-xs-offset-9,\n.col-xs-offset-10,\n.col-xs-offset-11,\n.col-xs-offset-12 {\n  box-sizing: border-box;\n  flex: 0 0 auto;\n  padding-right: 0.5rem;\n  padding-left: 0.5rem;\n}\n.col-xs {\n  flex-grow: 1;\n  flex-basis: 0;\n  max-width: 100%;\n}\n.col-xs-1 {\n  flex-basis: 8.33333333%;\n  max-width: 8.33333333%;\n}\n.col-xs-2 {\n  flex-basis: 16.66666667%;\n  max-width: 16.66666667%;\n}\n.col-xs-3 {\n  flex-basis: 25%;\n  max-width: 25%;\n}\n.col-xs-4 {\n  flex-basis: 33.33333333%;\n  max-width: 33.33333333%;\n}\n.col-xs-5 {\n  flex-basis: 41.66666667%;\n  max-width: 41.66666667%;\n}\n.col-xs-6 {\n  flex-basis: 50%;\n  max-width: 50%;\n}\n.col-xs-7 {\n  flex-basis: 58.33333333%;\n  max-width: 58.33333333%;\n}\n.col-xs-8 {\n  flex-basis: 66.66666667%;\n  max-width: 66.66666667%;\n}\n.col-xs-9 {\n  flex-basis: 75%;\n  max-width: 75%;\n}\n.col-xs-10 {\n  flex-basis: 83.33333333%;\n  max-width: 83.33333333%;\n}\n.col-xs-11 {\n  flex-basis: 91.66666667%;\n  max-width: 91.66666667%;\n}\n.col-xs-12 {\n  flex-basis: 100%;\n  max-width: 100%;\n}\n.col-xs-offset-0 {\n  margin-left: 0;\n}\n.col-xs-offset-1 {\n  margin-left: 8.33333333%;\n}\n.col-xs-offset-2 {\n  margin-left: 16.66666667%;\n}\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n.col-xs-offset-4 {\n  margin-left: 33.33333333%;\n}\n.col-xs-offset-5 {\n  margin-left: 41.66666667%;\n}\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n.col-xs-offset-7 {\n  margin-left: 58.33333333%;\n}\n.col-xs-offset-8 {\n  margin-left: 66.66666667%;\n}\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n.col-xs-offset-10 {\n  margin-left: 83.33333333%;\n}\n.col-xs-offset-11 {\n  margin-left: 91.66666667%;\n}\n.start-xs {\n  justify-content: flex-start;\n  text-align: start;\n}\n.center-xs {\n  justify-content: center;\n  text-align: center;\n}\n.end-xs {\n  justify-content: flex-end;\n  text-align: end;\n}\n.top-xs {\n  align-items: flex-start;\n}\n.middle-xs {\n  align-items: center;\n}\n.bottom-xs {\n  align-items: flex-end;\n}\n.around-xs {\n  justify-content: space-around;\n}\n.between-xs {\n  justify-content: space-between;\n}\n.first-xs {\n  order: -1;\n}\n.last-xs {\n  order: 1;\n}\n@media only screen and (min-width: 48em) {\n  .container {\n    width: 49rem;\n  }\n\n  .col-sm,\n.col-sm-1,\n.col-sm-2,\n.col-sm-3,\n.col-sm-4,\n.col-sm-5,\n.col-sm-6,\n.col-sm-7,\n.col-sm-8,\n.col-sm-9,\n.col-sm-10,\n.col-sm-11,\n.col-sm-12,\n.col-sm-offset-0,\n.col-sm-offset-1,\n.col-sm-offset-2,\n.col-sm-offset-3,\n.col-sm-offset-4,\n.col-sm-offset-5,\n.col-sm-offset-6,\n.col-sm-offset-7,\n.col-sm-offset-8,\n.col-sm-offset-9,\n.col-sm-offset-10,\n.col-sm-offset-11,\n.col-sm-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-sm {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-sm-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-sm-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-sm-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-sm-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-sm-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-sm-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-sm-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-sm-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-sm-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-sm-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-sm-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-sm-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-sm-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-sm-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-sm-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-sm-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-sm-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-sm-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-sm-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-sm-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-sm-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-sm {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-sm {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-sm {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-sm {\n    align-items: flex-start;\n  }\n\n  .middle-sm {\n    align-items: center;\n  }\n\n  .bottom-sm {\n    align-items: flex-end;\n  }\n\n  .around-sm {\n    justify-content: space-around;\n  }\n\n  .between-sm {\n    justify-content: space-between;\n  }\n\n  .first-sm {\n    order: -1;\n  }\n\n  .last-sm {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 64em) {\n  .container {\n    width: 65rem;\n  }\n\n  .col-md,\n.col-md-1,\n.col-md-2,\n.col-md-3,\n.col-md-4,\n.col-md-5,\n.col-md-6,\n.col-md-7,\n.col-md-8,\n.col-md-9,\n.col-md-10,\n.col-md-11,\n.col-md-12,\n.col-md-offset-0,\n.col-md-offset-1,\n.col-md-offset-2,\n.col-md-offset-3,\n.col-md-offset-4,\n.col-md-offset-5,\n.col-md-offset-6,\n.col-md-offset-7,\n.col-md-offset-8,\n.col-md-offset-9,\n.col-md-offset-10,\n.col-md-offset-11,\n.col-md-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-md {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-md-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-md-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-md-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-md-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-md-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-md-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-md-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-md-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-md-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-md-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-md-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-md-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-md-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-md-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-md-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-md-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-md-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-md-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-md-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-md-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-md-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-md {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-md {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-md {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-md {\n    align-items: flex-start;\n  }\n\n  .middle-md {\n    align-items: center;\n  }\n\n  .bottom-md {\n    align-items: flex-end;\n  }\n\n  .around-md {\n    justify-content: space-around;\n  }\n\n  .between-md {\n    justify-content: space-between;\n  }\n\n  .first-md {\n    order: -1;\n  }\n\n  .last-md {\n    order: 1;\n  }\n}\n@media only screen and (min-width: 75em) {\n  .container {\n    width: 76rem;\n  }\n\n  .col-lg,\n.col-lg-1,\n.col-lg-2,\n.col-lg-3,\n.col-lg-4,\n.col-lg-5,\n.col-lg-6,\n.col-lg-7,\n.col-lg-8,\n.col-lg-9,\n.col-lg-10,\n.col-lg-11,\n.col-lg-12,\n.col-lg-offset-0,\n.col-lg-offset-1,\n.col-lg-offset-2,\n.col-lg-offset-3,\n.col-lg-offset-4,\n.col-lg-offset-5,\n.col-lg-offset-6,\n.col-lg-offset-7,\n.col-lg-offset-8,\n.col-lg-offset-9,\n.col-lg-offset-10,\n.col-lg-offset-11,\n.col-lg-offset-12 {\n    box-sizing: border-box;\n    flex: 0 0 auto;\n    padding-right: 0.5rem;\n    padding-left: 0.5rem;\n  }\n\n  .col-lg {\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n  }\n\n  .col-lg-1 {\n    flex-basis: 8.33333333%;\n    max-width: 8.33333333%;\n  }\n\n  .col-lg-2 {\n    flex-basis: 16.66666667%;\n    max-width: 16.66666667%;\n  }\n\n  .col-lg-3 {\n    flex-basis: 25%;\n    max-width: 25%;\n  }\n\n  .col-lg-4 {\n    flex-basis: 33.33333333%;\n    max-width: 33.33333333%;\n  }\n\n  .col-lg-5 {\n    flex-basis: 41.66666667%;\n    max-width: 41.66666667%;\n  }\n\n  .col-lg-6 {\n    flex-basis: 50%;\n    max-width: 50%;\n  }\n\n  .col-lg-7 {\n    flex-basis: 58.33333333%;\n    max-width: 58.33333333%;\n  }\n\n  .col-lg-8 {\n    flex-basis: 66.66666667%;\n    max-width: 66.66666667%;\n  }\n\n  .col-lg-9 {\n    flex-basis: 75%;\n    max-width: 75%;\n  }\n\n  .col-lg-10 {\n    flex-basis: 83.33333333%;\n    max-width: 83.33333333%;\n  }\n\n  .col-lg-11 {\n    flex-basis: 91.66666667%;\n    max-width: 91.66666667%;\n  }\n\n  .col-lg-12 {\n    flex-basis: 100%;\n    max-width: 100%;\n  }\n\n  .col-lg-offset-0 {\n    margin-left: 0;\n  }\n\n  .col-lg-offset-1 {\n    margin-left: 8.33333333%;\n  }\n\n  .col-lg-offset-2 {\n    margin-left: 16.66666667%;\n  }\n\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n\n  .col-lg-offset-4 {\n    margin-left: 33.33333333%;\n  }\n\n  .col-lg-offset-5 {\n    margin-left: 41.66666667%;\n  }\n\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n\n  .col-lg-offset-7 {\n    margin-left: 58.33333333%;\n  }\n\n  .col-lg-offset-8 {\n    margin-left: 66.66666667%;\n  }\n\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n\n  .col-lg-offset-10 {\n    margin-left: 83.33333333%;\n  }\n\n  .col-lg-offset-11 {\n    margin-left: 91.66666667%;\n  }\n\n  .start-lg {\n    justify-content: flex-start;\n    text-align: start;\n  }\n\n  .center-lg {\n    justify-content: center;\n    text-align: center;\n  }\n\n  .end-lg {\n    justify-content: flex-end;\n    text-align: end;\n  }\n\n  .top-lg {\n    align-items: flex-start;\n  }\n\n  .middle-lg {\n    align-items: center;\n  }\n\n  .bottom-lg {\n    align-items: flex-end;\n  }\n\n  .around-lg {\n    justify-content: space-around;\n  }\n\n  .between-lg {\n    justify-content: space-between;\n  }\n\n  .first-lg {\n    order: -1;\n  }\n\n  .last-lg {\n    order: 1;\n  }\n}\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n/* Document\n   ========================================================================== */\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\nhtml {\n  line-height: 1.15;\n  /* 1 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n/* Sections\n   ========================================================================== */\n/**\n * Remove the margin in all browsers.\n */\nbody {\n  margin: 0;\n}\n/**\n * Render the `main` element consistently in IE.\n */\nmain {\n  display: block;\n}\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n/* Grouping content\n   ========================================================================== */\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\nhr {\n  box-sizing: content-box;\n  /* 1 */\n  height: 0;\n  /* 1 */\n  overflow: visible;\n  /* 2 */\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\npre {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Remove the gray background on active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\nabbr[title] {\n  border-bottom: none;\n  /* 1 */\n  text-decoration: underline;\n  /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted;\n  /* 2 */\n}\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\nb,\nstrong {\n  font-weight: bolder;\n}\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace;\n  /* 1 */\n  font-size: 1em;\n  /* 2 */\n}\n/**\n * Add the correct font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsub {\n  bottom: -0.25em;\n}\nsup {\n  top: -0.5em;\n}\n/* Embedded content\n   ========================================================================== */\n/**\n * Remove the border on images inside links in IE 10.\n */\nimg {\n  border-style: none;\n}\n/* Forms\n   ========================================================================== */\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit;\n  /* 1 */\n  font-size: 100%;\n  /* 1 */\n  line-height: 1.15;\n  /* 1 */\n  margin: 0;\n  /* 2 */\n}\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\nbutton,\ninput {\n  /* 1 */\n  overflow: visible;\n}\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\nbutton,\nselect {\n  /* 1 */\n  text-transform: none;\n}\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  -webkit-appearance: button;\n}\n/**\n * Remove the inner border and padding in Firefox.\n */\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n/**\n * Restore the focus styles unset by the previous rule.\n */\nbutton:-moz-focusring,\n[type=button]:-moz-focusring,\n[type=reset]:-moz-focusring,\n[type=submit]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n/**\n * Correct the padding in Firefox.\n */\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\nlegend {\n  box-sizing: border-box;\n  /* 1 */\n  color: inherit;\n  /* 2 */\n  display: table;\n  /* 1 */\n  max-width: 100%;\n  /* 1 */\n  padding: 0;\n  /* 3 */\n  white-space: normal;\n  /* 1 */\n}\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\nprogress {\n  vertical-align: baseline;\n}\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\ntextarea {\n  overflow: auto;\n}\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n[type=number]::-webkit-inner-spin-button,\n[type=number]::-webkit-outer-spin-button {\n  height: auto;\n}\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n[type=search] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  outline-offset: -2px;\n  /* 2 */\n}\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n[type=search]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n::-webkit-file-upload-button {\n  -webkit-appearance: button;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n}\n/* Interactive\n   ========================================================================== */\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\ndetails {\n  display: block;\n}\n/*\n * Add the correct display in all browsers.\n */\nsummary {\n  display: list-item;\n}\n/* Misc\n   ========================================================================== */\n/**\n * Add the correct display in IE 10+.\n */\ntemplate {\n  display: none;\n}\n/**\n * Add the correct display in IE 10.\n */\n[hidden] {\n  display: none;\n}\n:root {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --font-color-custom-black: #000000;\n  --pink-color-2: #ebb8b8;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --border-causes-color: #dfdfe1;\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #f9f9f9;\n  --border-input-color: #ebebeb;\n  --white-color: #ffffff;\n  --body-background: #ffffff;\n  --body-background-contrast: #ffffff;\n  --gray-color-0: #fbfbfb;\n  --gray-color-1: #f0f0f0;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #666666;\n  --gray-color-5: #444444;\n  --gray-color-6: #393939;\n  --gray-color-7: #323232;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\n.dark-mode {\n  --pink-color: #ffe5e5;\n  --font-color-header: #f0f0f0;\n  --pink-color-2: #ebb8b8;\n  --font-color-custom-black: #bbbbbb;\n  --border-causes-color: #393939;\n  --red-color: #e7402f;\n  --primary-color: #cc4d4d;\n  --primary-accent-color: rgba(136, 60, 60, 0.50);\n  --primary-shadow-color: #a72525;\n  --primary-dark-color: #773737;\n  --primary-light-color: rgba(204, 77, 77, 0.6);\n  --accent-color: rgba(0, 0, 0, 0.5);\n  --secondary-color: #222222;\n  --green-color: #32ba6d;\n  --green-color-2: #97b16b;\n  --aqua-color: #009999;\n  --background-input-color: #393939;\n  --border-input-color: #ebebeb;\n  --body-background: #1c1c1e;\n  --body-background-contrast: #1c1c1e;\n  --white-color: #ffffff;\n  --gray-color-0: #393939;\n  --gray-color-1: #2a2a2a;\n  --gray-color-2: #bbbbbb;\n  --gray-color-3: #999999;\n  --gray-color-4: #bbbbbb;\n  --gray-color-5: #bbbbbb;\n  --gray-color-6: #393939;\n  --gray-color-7: #bbbbbb;\n  --gray-color-8: #2a2a2a;\n  --gray-color-9: #222222;\n}\nbody {\n  background-color: var(--body-background);\n  transition: 0.25s;\n}\n* {\n  font-family: \"Open Sans\", sans-serif;\n  box-sizing: border-box;\n  margin: 0;\n}\na {\n  text-decoration: none;\n}\nli {\n  list-style-type: none;\n}\nul {\n  margin: 0;\n  padding: 0;\n}\nbutton {\n  border: none;\n  padding: 0;\n  background: transparent;\n}\nbutton:hover {\n  cursor: pointer;\n}\nbutton:focus, a:focus, input:focus, textarea:focus {\n  outline: none;\n  -webkit-filter: brightness(0.8);\n          filter: brightness(0.8);\n}\ninput, textarea {\n  border: solid 0.0625rem var(--border-input-color);\n  background: var(--background-input-color);\n  min-height: 1.875rem;\n  color: var(--font-color-header);\n}\n.break {\n  flex-basis: 100%;\n  height: 0;\n}\n.basic-slider__list::-webkit-scrollbar, .gallery__list::-webkit-scrollbar {\n  display: none;\n}\n.small-font-label {\n  font-weight: 600;\n  font-size: 0.75rem;\n}\n.label, label {\n  color: var(--gray-color-4);\n  font-size: 0.875rem;\n  font-weight: 600;\n}\n.icon {\n  width: 1.875rem;\n  height: 1.875rem;\n}\n.heading-1, .presentation__title {\n  font-weight: 400;\n  font-size: 1.5rem;\n}\n.heading-2 {\n  font-weight: 600;\n  font-size: 1.625rem;\n}\n.heading-3, .feed__title, .subtitle-line-below__button {\n  font-weight: 600;\n  font-size: 1rem;\n  line-height: 1.3rem;\n}\n.heading-4, .subtitle-line-below__text {\n  font-weight: 600;\n  font-size: 1.125rem;\n  line-height: 1.3rem;\n}\n.heading-5 {\n  font-weight: 700;\n  font-size: 1rem;\n  color: var(--gray-color-4);\n  text-transform: uppercase;\n  height: auto;\n}\n.block-scroll {\n  overflow: hidden !important;\n  height: 100vh !important;\n}\n.cover {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: cover;\n     object-fit: cover;\n  -o-object-position: 50% 50%;\n     object-position: 50% 50%;\n}\nfigure {\n  background: var(--gray-color-2);\n}\n.paragraph, .presentation__paragraph, .paragraph-light, .feed__paragraph {\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.5rem;\n}\n.paragraph-light, .feed__paragraph {\n  font-weight: 300;\n}\n.simple-button, .presentation__read-more-button {\n  border: none;\n  color: var(--white-color);\n  background-color: var(--gray-color-9);\n  font-weight: 700;\n  font-size: 0.875rem;\n}\n/*========================== Subtitles with line below ==========================*/\n.subtitle-line-below {\n  margin-bottom: 2.8125rem;\n}\n.subtitle-line-below__list {\n  display: flex;\n}\n.feed .subtitle-line-below__item:nth-last-of-type(1) {\n  flex: 1;\n}\n.subtitle-line-below__item:nth-last-of-type(1) > .subtitle-line-below__button {\n  margin-left: 0.125rem;\n  padding: 0 0.25rem;\n}\n.subtitle-line-below__button {\n  font-size: 1.5rem;\n  width: 100%;\n  color: var(--gray-color-7);\n}\n.subtitle-line-below__button, .subtitle-line-below__text {\n  position: relative;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n}\n.subtitle-line-below__button:before, .subtitle-line-below__text:before {\n  content: \"\";\n  width: 100%;\n  height: 0.4375rem;\n  background: var(--primary-light-color);\n  position: absolute;\n  top: 2.2rem;\n  left: 0;\n}\n.subtitle-line-below__button:hover:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__button--active:before {\n  background: var(--primary-color);\n}\n.subtitle-line-below__text:before {\n  background-color: var(--primary-color);\n  width: 110%;\n  height: 0.25rem;\n}\n.subtitle-line-below__text {\n  text-transform: uppercase;\n  color: var(--white-color);\n}\n/*========================== Feed Section - Gallery, Events, News ==========================*/\n.feed__item {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 2.8125rem;\n}\n.feed__image {\n  width: 100%;\n  margin-bottom: 1rem;\n}\n.feed__content {\n  flex: 1;\n}\n.feed__title {\n  margin-bottom: 0.625rem;\n  color: var(--font-color-custom-black);\n}\n.feed__paragraph {\n  color: var(--gray-color-4);\n}\n/*========================== Presentation section ==========================*/\n.presentation {\n  height: 34.0625rem;\n  color: var(--white-color);\n  padding-top: 6.25rem;\n  background: url(\"https://cdn.pixabay.com/photo/2015/08/05/13/55/children-876543_1280.jpg\") no-repeat fixed bottom;\n  background-size: cover;\n}\n.presentation__container, .presentation__row {\n  height: 100%;\n}\n.presentation__title, .presentation__paragraph {\n  background: var(--accent-color);\n}\n.presentation__title {\n  margin: 0.625rem 0;\n  width: 100%;\n  padding: 0.25rem 1.25rem;\n}\n.presentation__paragraph {\n  width: 100%;\n  padding: 1rem 1.25rem;\n  line-height: 1.5625rem;\n  margin: 0.625rem 0;\n  overflow-y: scroll;\n  max-height: 15rem;\n}\n.presentation__read-more-button {\n  padding: 0.6rem 1.25rem;\n  margin: 0.625rem 0;\n  border-radius: 0.1875rem;\n}\n@media (max-width: 992px) {\n  .presentation {\n    padding-top: 0;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "./src/app/modules/home/components/presentation/presentation.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/modules/home/components/presentation/presentation.component.ts ***!
  \********************************************************************************/
/*! exports provided: PresentationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PresentationComponent", function() { return PresentationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let PresentationComponent = class PresentationComponent {
    constructor() {
        this.presentation = {
            title: 'Creative Clean Charity Design',
            paragraph: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc accumsan pretium leo ut consectetur. Vestibulum a mattis ipsum. Nunc turpis velit, consequat quis ipsum eu, fermentum adipiscing ligula.',
            img: 'https://cdn.pixabay.com/photo/2015/08/05/13/55/children-876543_1280.jpg'
        };
    }
    ngOnInit() {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PresentationComponent.prototype, "presentation", void 0);
PresentationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-presentation',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./presentation.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/presentation/presentation.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./presentation.component.scss */ "./src/app/modules/home/components/presentation/presentation.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], PresentationComponent);



/***/ }),

/***/ "./src/app/modules/home/components/sponsors/sponsors.component.scss":
/*!**************************************************************************!*\
  !*** ./src/app/modules/home/components/sponsors/sponsors.component.scss ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".sponsors {\n  margin-top: 3.125rem;\n  margin-bottom: 6.25rem;\n}\n\n.sponsors__row {\n  position: relative;\n}\n\n.sponsors__row:before {\n  content: \"\";\n  width: 7rem;\n  height: 5.3125rem;\n  position: absolute;\n  z-index: 1;\n  bottom: 0;\n}\n\n.sponsors__row:after {\n  content: \"\";\n  width: 7rem;\n  height: 5.3125rem;\n  position: absolute;\n  z-index: 1;\n  bottom: 0;\n  right: 0;\n}\n\n.feed__items::-webkit-scrollbar {\n  display: none;\n}\n\n.sponsors__row .feed__items {\n  position: relative;\n  display: flex;\n  overflow: auto;\n  justify-content: center;\n}\n\n.sponsors__row .feed__item:first-of-type {\n  margin-left: 0;\n}\n\n.sponsors__row .feed__item {\n  margin-bottom: 0;\n  margin-left: 1.75rem;\n}\n\n.sponsors__row .feed__image {\n  width: 11.25rem;\n  height: 5.3125rem;\n  margin-bottom: 0;\n  border: 0.0625rem solid var(--gray-color-1);\n}\n\n.sponsors__row .feed__image > .cover {\n  transition: 0.25s;\n}\n\n.sponsors__next-button {\n  position: absolute;\n  top: 7rem;\n  z-index: 2;\n  background: transparent;\n}\n\n.sponsors__next-button:last-of-type {\n  right: 0;\n  z-index: 2;\n  transform: rotate(180deg);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaG9uLm9zb3Jpby9Eb2N1bWVudHMvUGVyc29uYWwvVGVzdFVYVUlEZXYtYW5ndWxhci9zcmMvYXBwL21vZHVsZXMvaG9tZS9jb21wb25lbnRzL3Nwb25zb3JzL3Nwb25zb3JzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2hvbWUvY29tcG9uZW50cy9zcG9uc29ycy9zcG9uc29ycy5jb21wb25lbnQuc2NzcyIsIi9Vc2Vycy9qaG9uLm9zb3Jpby9Eb2N1bWVudHMvUGVyc29uYWwvVGVzdFVYVUlEZXYtYW5ndWxhci9zcmMvYXNzZXRzL3Njc3MvdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxvQkFBQTtFQUNBLHNCQUFBO0FDREY7O0FESUE7RUFDRSxrQkFBQTtBQ0RGOztBRElBO0VBQ0UsV0FBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7QUNERjs7QURJQTtFQUNFLFdBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtBQ0RGOztBRElBO0VBQ0UsYUFBQTtBQ0RGOztBRElBO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLHVCQUFBO0FDREY7O0FESUE7RUFDRSxjQUFBO0FDREY7O0FESUE7RUFDRSxnQkFBQTtFQUNBLG9CQUFBO0FDREY7O0FES0E7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLDJDQUFBO0FDRkY7O0FESUE7RUFDRSxpQkV1Qlc7QUR4QmI7O0FES0E7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsdUJBQUE7QUNGRjs7QURLQTtFQUNFLFFBQUE7RUFDQSxVQUFBO0VBQ0EseUJBQUE7QUNGRiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9jb21wb25lbnRzL3Nwb25zb3JzL3Nwb25zb3JzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcInNyYy9hc3NldHMvc2Nzcy92YXJpYWJsZXNcIjtcblxuLnNwb25zb3Jze1xuICBtYXJnaW4tdG9wOiAzLjEyNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogNi4yNXJlbTtcbn1cblxuLnNwb25zb3JzX19yb3d7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNwb25zb3JzX19yb3c6YmVmb3Jle1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDdyZW07XG4gIGhlaWdodDogNS4zMTI1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGJvdHRvbTogMDtcbn1cblxuLnNwb25zb3JzX19yb3c6YWZ0ZXJ7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogN3JlbTtcbiAgaGVpZ2h0OiA1LjMxMjVyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbn1cblxuLmZlZWRfX2l0ZW1zOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zcG9uc29yc19fcm93IC5mZWVkX19pdGVtc3tcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogYXV0bztcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5zcG9uc29yc19fcm93IC5mZWVkX19pdGVtOmZpcnN0LW9mLXR5cGV7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4uc3BvbnNvcnNfX3JvdyAuZmVlZF9faXRlbXtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgbWFyZ2luLWxlZnQ6IDEuNzVyZW07XG59XG5cblxuLnNwb25zb3JzX19yb3cgLmZlZWRfX2ltYWdle1xuICB3aWR0aDogMTEuMjVyZW07XG4gIGhlaWdodDogNS4zMTI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCAkZ3JheS1jb2xvci0xO1xufVxuLnNwb25zb3JzX19yb3cgLmZlZWRfX2ltYWdlPi5jb3ZlcntcbiAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG5cbn1cblxuLnNwb25zb3JzX19uZXh0LWJ1dHRvbntcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDdyZW07XG4gIHotaW5kZXg6IDI7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uc3BvbnNvcnNfX25leHQtYnV0dG9uOmxhc3Qtb2YtdHlwZXtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDI7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG59XG4iLCIuc3BvbnNvcnMge1xuICBtYXJnaW4tdG9wOiAzLjEyNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogNi4yNXJlbTtcbn1cblxuLnNwb25zb3JzX19yb3cge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5zcG9uc29yc19fcm93OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHdpZHRoOiA3cmVtO1xuICBoZWlnaHQ6IDUuMzEyNXJlbTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB6LWluZGV4OiAxO1xuICBib3R0b206IDA7XG59XG5cbi5zcG9uc29yc19fcm93OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDdyZW07XG4gIGhlaWdodDogNS4zMTI1cmVtO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IDE7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG59XG5cbi5mZWVkX19pdGVtczo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uc3BvbnNvcnNfX3JvdyAuZmVlZF9faXRlbXMge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnNwb25zb3JzX19yb3cgLmZlZWRfX2l0ZW06Zmlyc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuXG4uc3BvbnNvcnNfX3JvdyAuZmVlZF9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIG1hcmdpbi1sZWZ0OiAxLjc1cmVtO1xufVxuXG4uc3BvbnNvcnNfX3JvdyAuZmVlZF9faW1hZ2Uge1xuICB3aWR0aDogMTEuMjVyZW07XG4gIGhlaWdodDogNS4zMTI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCB2YXIoLS1ncmF5LWNvbG9yLTEpO1xufVxuXG4uc3BvbnNvcnNfX3JvdyAuZmVlZF9faW1hZ2UgPiAuY292ZXIge1xuICB0cmFuc2l0aW9uOiAwLjI1cztcbn1cblxuLnNwb25zb3JzX19uZXh0LWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA3cmVtO1xuICB6LWluZGV4OiAyO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuLnNwb25zb3JzX19uZXh0LWJ1dHRvbjpsYXN0LW9mLXR5cGUge1xuICByaWdodDogMDtcbiAgei1pbmRleDogMjtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbn0iLCIvLyBUYWJsZSBvZiBDb250ZW50czpcbi8vXG4vLyAgMS4gQ29sb3JzXG4vLyAgMi4gVHlwb2dyYXBoeVxuLy8gIDMuIEhlYWRlclxuLy8gIDQuIFV0aWxcbi8vICA1LiBQcmVzZW50YXRpb25cbi8vICA2LiBDb2xsYXBzaWJsZVxuLy8gIDcuIENoaXBzXG4vLyAgOC4gRGF0ZSArIFRpbWUgUGlja2VyXG4vLyAgOS4gRHJvcGRvd25cbi8vICAxMC4gRm9ybXNcbi8vICAxMS4gR2xvYmFsXG4vLyAgMTIuIEdyaWRcbi8vICAxMy4gTmF2aWdhdGlvbiBCYXJcbi8vICAxNC4gU2lkZSBOYXZpZ2F0aW9uXG4vLyAgMTUuIFBob3RvIFNsaWRlclxuLy8gIDE2LiBTcGlubmVycyB8IExvYWRlcnNcbi8vICAxNy4gVGFic1xuLy8gIDE4LiBUYWJsZXNcbi8vICAxOS4gVG9hc3RzXG4vLyAgMjAuIFR5cG9ncmFwaHlcbi8vICAyMS4gRm9vdGVyXG4vLyAgMjIuIEZsb3cgVGV4dFxuLy8gIDIzLiBDb2xsZWN0aW9uc1xuLy8gIDI0LiBQcm9ncmVzcyBCYXJcblxuXG4vLyAxLiBDb2xvcnNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4kYm9keS1iYWNrZ3JvdW5kOiB2YXIoLS1ib2R5LWJhY2tncm91bmQpO1xuJGJvcmRlci1jYXVzZXMtY29sb3I6IHZhcigtLWJvcmRlci1jYXVzZXMtY29sb3IpO1xuJHBpbmstY29sb3I6IHZhcigtLXBpbmstY29sb3IpO1xuJGZvbnQtY29sb3ItY3VzdG9tLWJsYWNrOiB2YXIoLS1mb250LWNvbG9yLWN1c3RvbS1ibGFjayk7XG4kZm9udC1jb2xvci1oZWFkZXI6IHZhcigtLWZvbnQtY29sb3ItaGVhZGVyKTtcbiRwaW5rLWNvbG9yLTI6IHZhcigtLXBpbmstY29sb3ItMik7XG4kcmVkLWNvbG9yOiB2YXIoLS1yZWQtY29sb3IpO1xuJHByaW1hcnktY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xuJHByaW1hcnktYWNjZW50LWNvbG9yOiB2YXIoLS1wcmltYXJ5LWFjY2VudC1jb2xvcik7XG4kcHJpbWFyeS1zaGFkb3c6IHZhcigtLXByaW1hcnktc2hhZG93LWNvbG9yKTtcbiRwcmltYXJ5LWRhcmstY29sb3I6IHZhcigtLXByaW1hcnktZGFyay1jb2xvcik7XG4kcHJpbWFyeS1saWdodC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodC1jb2xvcik7XG4kYWNjZW50LWNvbG9yOiB2YXIoLS1hY2NlbnQtY29sb3IpO1xuJHNlY29uZGFyeTogdmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtcbiRncmVlbi1jb2xvcjogdmFyKC0tZ3JlZW4tY29sb3IpO1xuJGdyZWVuLWNvbG9yLTI6IHZhcigtLWdyZWVuLWNvbG9yLTIpO1xuJGFxdWEtY29sb3I6IHZhcigtLWFxdWEtY29sb3IpO1xuJHdoaXRlLWNvbG9yOiB2YXIoLS13aGl0ZS1jb2xvcik7XG4kZ3JheS1jb2xvci0wOiB2YXIoLS1ncmF5LWNvbG9yLTApO1xuJGdyYXktY29sb3ItMTogdmFyKC0tZ3JheS1jb2xvci0xKTtcbiRncmF5LWNvbG9yLTI6IHZhcigtLWdyYXktY29sb3ItMik7XG4kZ3JheS1jb2xvci0zOiB2YXIoLS1ncmF5LWNvbG9yLTMpO1xuJGdyYXktY29sb3ItNDogdmFyKC0tZ3JheS1jb2xvci00KTtcbiRncmF5LWNvbG9yLTU6IHZhcigtLWdyYXktY29sb3ItNSk7XG4kZ3JheS1jb2xvci02OiB2YXIoLS1ncmF5LWNvbG9yLTYpO1xuJGdyYXktY29sb3ItNzogdmFyKC0tZ3JheS1jb2xvci03KTtcbiRncmF5LWNvbG9yLTg6IHZhcigtLWdyYXktY29sb3ItOCk7XG4kZ3JheS1jb2xvci05OiB2YXIoLS1ncmF5LWNvbG9yLTkpO1xuJGJhY2tncm91bmQtaW5wdXQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtaW5wdXQtY29sb3IpO1xuJGJvcmRlci1pbnB1dC1jb2xvcjogdmFyKC0tYm9yZGVyLWlucHV0LWNvbG9yKTtcblxuLy8gMi4gVHlwb2dyYXBoeVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiRvcGVuLXNhbnMtZm9udDogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4kbGlnaHQ6IDMwMDtcbiRyZWd1bGFyOiA0MDA7XG4kcmVndWxhci1pdGFsaWM6IDQwMGk7XG4kc2VtaS1ib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuJGV4dHJhLWJvbGQ6IDgwMDtcblxuLy8gMy4gSGVhZGVyXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4kbG9nby1zaXplOiAycmVtO1xuJGhlYWRlci1oZWlnaHQ6IDYuMjVyZW07XG4kaGVhZGVyLXBhZGRpbmc6IDEuNTYyNXJlbTtcbiRoZWFkZXItYm9yZGVyLXNpemU6IDAuNDM3NXJlbTtcblxuLy8gNC4gVXRpbFxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiR0cmFuc2l0aW9uOiAwLjI1cztcbiRib3JkZXI6IHNvbGlkIDAuMDYyNXJlbTtcbiRwcmVzZW50YXRpb24taGVpZ2h0OiAgMzQuMDYyNXJlbTtcbiRjYXVzZXMtaGVpZ2h0OiAgMzUuMTg3NXJlbTtcbiRtYXJnaW46IDAuNjI1cmVtO1xuXG4iXX0= */");

/***/ }),

/***/ "./src/app/modules/home/components/sponsors/sponsors.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/modules/home/components/sponsors/sponsors.component.ts ***!
  \************************************************************************/
/*! exports provided: SponsorsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SponsorsComponent", function() { return SponsorsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let SponsorsComponent = class SponsorsComponent {
    constructor() {
        this.counter = 0;
        this.sponsors = [
            {
                img: 'https://www.cocacolaespana.es/content/dam/journey/es/es/private/historia/love-coca-cola/2015/logo-coca-cola-lead.png',
            },
            {
                img: 'https://www.criptonoticias.com/wp-content/uploads/2016/06/Microsoft_Consensys_Identidad_Blockchain_Aplicaciones.png',
            },
            {
                img: 'https://www.dataversity.net/wp-content/uploads/2012/04/ap1.jpg',
            },
            {
                img: 'https://www.phonegatealert.org/wp-content/uploads/2019/07/Nokia-Logo-1080x675.jpg',
            },
            {
                img: 'https://www.gitex.com/__resource/companyProfiles/82940FE-D4F2-4162-98B6-166104446A1B-logo.png',
            }
        ];
    }
    ngOnInit() {
    }
    nextItem() {
        this.sponsorsBackup = [];
        let j = 0;
        for (let i = 0; i < this.sponsors.length; i++) {
            j++;
            if (j >= this.sponsors.length) {
                j = 0;
            }
            this.sponsorsBackup.push(this.sponsors[j]);
        }
        this.sponsors = this.sponsorsBackup;
    }
    previousItem() {
        this.sponsorsBackup = [];
        let j = this.sponsors.length - 1;
        for (let i = 0; i < this.sponsors.length; i++) {
            if (j >= this.sponsors.length) {
                j = 0;
            }
            this.sponsorsBackup.push(this.sponsors[j]);
            j++;
        }
        this.sponsors = this.sponsorsBackup;
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
], SponsorsComponent.prototype, "sponsors", void 0);
SponsorsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-sponsors',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./sponsors.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/components/sponsors/sponsors.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./sponsors.component.scss */ "./src/app/modules/home/components/sponsors/sponsors.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], SponsorsComponent);



/***/ }),

/***/ "./src/app/modules/home/home.module.ts":
/*!*********************************************!*\
  !*** ./src/app/modules/home/home.module.ts ***!
  \*********************************************/
/*! exports provided: HomeModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeModule", function() { return HomeModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _pages_home_home_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/home/home.component */ "./src/app/modules/home/pages/home/home.component.ts");
/* harmony import */ var _components_presentation_presentation_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/presentation/presentation.component */ "./src/app/modules/home/components/presentation/presentation.component.ts");
/* harmony import */ var _home_routes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./home.routes */ "./src/app/modules/home/home.routes.ts");
/* harmony import */ var _components_causes_causes_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/causes/causes.component */ "./src/app/modules/home/components/causes/causes.component.ts");
/* harmony import */ var _components_gallery_gallery_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/gallery/gallery.component */ "./src/app/modules/home/components/gallery/gallery.component.ts");
/* harmony import */ var _components_events_events_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/events/events.component */ "./src/app/modules/home/components/events/events.component.ts");
/* harmony import */ var _components_news_news_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/news/news.component */ "./src/app/modules/home/components/news/news.component.ts");
/* harmony import */ var _components_sponsors_sponsors_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/sponsors/sponsors.component */ "./src/app/modules/home/components/sponsors/sponsors.component.ts");
/* harmony import */ var _home_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./home.service */ "./src/app/modules/home/home.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");













let HomeModule = class HomeModule {
};
HomeModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        declarations: [_pages_home_home_component__WEBPACK_IMPORTED_MODULE_3__["HomeComponent"], _components_presentation_presentation_component__WEBPACK_IMPORTED_MODULE_4__["PresentationComponent"], _components_causes_causes_component__WEBPACK_IMPORTED_MODULE_6__["CausesComponent"], _components_gallery_gallery_component__WEBPACK_IMPORTED_MODULE_7__["GalleryComponent"], _components_events_events_component__WEBPACK_IMPORTED_MODULE_8__["EventsComponent"], _components_news_news_component__WEBPACK_IMPORTED_MODULE_9__["NewsComponent"], _components_sponsors_sponsors_component__WEBPACK_IMPORTED_MODULE_10__["SponsorsComponent"]],
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _home_routes__WEBPACK_IMPORTED_MODULE_5__["HOME_ROUTING"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_12__["HttpClientModule"]
        ],
        providers: [_home_service__WEBPACK_IMPORTED_MODULE_11__["HomeService"]]
    })
], HomeModule);



/***/ }),

/***/ "./src/app/modules/home/home.routes.ts":
/*!*********************************************!*\
  !*** ./src/app/modules/home/home.routes.ts ***!
  \*********************************************/
/*! exports provided: HOME_ROUTING */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HOME_ROUTING", function() { return HOME_ROUTING; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _pages_home_home_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pages/home/home.component */ "./src/app/modules/home/pages/home/home.component.ts");



const HOME_ROUTES = [
    { path: '', component: _pages_home_home_component__WEBPACK_IMPORTED_MODULE_2__["HomeComponent"] },
];
const HOME_ROUTING = _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(HOME_ROUTES);


/***/ }),

/***/ "./src/app/modules/home/home.service.ts":
/*!**********************************************!*\
  !*** ./src/app/modules/home/home.service.ts ***!
  \**********************************************/
/*! exports provided: HomeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeService", function() { return HomeService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");




let HomeService = class HomeService {
    constructor(httpClient) {
        this.httpClient = httpClient;
        this.endpoint = _environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].API;
    }
    getPresentation() {
        return this.httpClient.get(`${this.endpoint}/presentation.json`);
    }
    getCauses() {
        return this.httpClient.get(`${this.endpoint}/causes.json`);
    }
    getGallery() {
        return this.httpClient.get(`${this.endpoint}/gallery.json`);
    }
    getEvents() {
        return this.httpClient.get(`${this.endpoint}/events.json`);
    }
    getNews() {
        return this.httpClient.get(`${this.endpoint}/news.json`);
    }
};
HomeService.ctorParameters = () => [
    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
];
HomeService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], HomeService);



/***/ }),

/***/ "./src/app/modules/home/pages/home/home.component.scss":
/*!*************************************************************!*\
  !*** ./src/app/modules/home/pages/home/home.component.scss ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9wYWdlcy9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MifQ== */");

/***/ }),

/***/ "./src/app/modules/home/pages/home/home.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/modules/home/pages/home/home.component.ts ***!
  \***********************************************************/
/*! exports provided: HomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function() { return HomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _home_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../home.service */ "./src/app/modules/home/home.service.ts");



let HomeComponent = class HomeComponent {
    constructor(homeService) {
        this.homeService = homeService;
        this.homeService.getPresentation().subscribe(result => this.presentation = result);
        this.homeService.getCauses().subscribe(result => this.causes = result);
        this.homeService.getGallery().subscribe(result => this.gallery = result);
        this.homeService.getEvents().subscribe(result => this.events = result);
        this.homeService.getNews().subscribe(result => this.news = result);
    }
    ngOnInit() {
    }
};
HomeComponent.ctorParameters = () => [
    { type: _home_service__WEBPACK_IMPORTED_MODULE_2__["HomeService"] }
];
HomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-home',
        template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! raw-loader!./home.component.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/modules/home/pages/home/home.component.html")).default,
        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(/*! ./home.component.scss */ "./src/app/modules/home/pages/home/home.component.scss")).default]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_home_service__WEBPACK_IMPORTED_MODULE_2__["HomeService"]])
], HomeComponent);



/***/ })

}]);
//# sourceMappingURL=modules-home-home-module-es2015.js.map